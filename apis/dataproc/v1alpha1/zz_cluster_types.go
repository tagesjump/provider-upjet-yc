// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AutoscalingConfigInitParameters struct {

	// Defines an autoscaling rule based on the average CPU utilization of the instance group. If not set default autoscaling metric will be used.
	CPUUtilizationTarget *string `json:"cpuUtilizationTarget,omitempty" tf:"cpu_utilization_target,omitempty"`

	// Timeout to gracefully decommission nodes during downscaling. In seconds.
	DecommissionTimeout *string `json:"decommissionTimeout,omitempty" tf:"decommission_timeout,omitempty"`

	// Maximum number of nodes in autoscaling subclusters.
	MaxHostsCount *float64 `json:"maxHostsCount,omitempty" tf:"max_hosts_count,omitempty"`

	// Time in seconds allotted for averaging metrics.
	MeasurementDuration *string `json:"measurementDuration,omitempty" tf:"measurement_duration,omitempty"`

	// Bool flag -- whether to use preemptible compute instances. Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time if their resources are needed by Compute. For more information, see Preemptible Virtual Machines.
	Preemptible *bool `json:"preemptible,omitempty" tf:"preemptible,omitempty"`

	// Minimum amount of time in seconds allotted for monitoring before Instance Groups can reduce the number of instances in the group. During this time, the group size doesn't decrease, even if the new metric values indicate that it should.
	StabilizationDuration *string `json:"stabilizationDuration,omitempty" tf:"stabilization_duration,omitempty"`

	// The warmup time of the instance in seconds. During this time, traffic is sent to the instance, but instance metrics are not collected.
	WarmupDuration *string `json:"warmupDuration,omitempty" tf:"warmup_duration,omitempty"`
}

type AutoscalingConfigObservation struct {

	// Defines an autoscaling rule based on the average CPU utilization of the instance group. If not set default autoscaling metric will be used.
	CPUUtilizationTarget *string `json:"cpuUtilizationTarget,omitempty" tf:"cpu_utilization_target,omitempty"`

	// Timeout to gracefully decommission nodes during downscaling. In seconds.
	DecommissionTimeout *string `json:"decommissionTimeout,omitempty" tf:"decommission_timeout,omitempty"`

	// Maximum number of nodes in autoscaling subclusters.
	MaxHostsCount *float64 `json:"maxHostsCount,omitempty" tf:"max_hosts_count,omitempty"`

	// Time in seconds allotted for averaging metrics.
	MeasurementDuration *string `json:"measurementDuration,omitempty" tf:"measurement_duration,omitempty"`

	// Bool flag -- whether to use preemptible compute instances. Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time if their resources are needed by Compute. For more information, see Preemptible Virtual Machines.
	Preemptible *bool `json:"preemptible,omitempty" tf:"preemptible,omitempty"`

	// Minimum amount of time in seconds allotted for monitoring before Instance Groups can reduce the number of instances in the group. During this time, the group size doesn't decrease, even if the new metric values indicate that it should.
	StabilizationDuration *string `json:"stabilizationDuration,omitempty" tf:"stabilization_duration,omitempty"`

	// The warmup time of the instance in seconds. During this time, traffic is sent to the instance, but instance metrics are not collected.
	WarmupDuration *string `json:"warmupDuration,omitempty" tf:"warmup_duration,omitempty"`
}

type AutoscalingConfigParameters struct {

	// Defines an autoscaling rule based on the average CPU utilization of the instance group. If not set default autoscaling metric will be used.
	// +kubebuilder:validation:Optional
	CPUUtilizationTarget *string `json:"cpuUtilizationTarget,omitempty" tf:"cpu_utilization_target,omitempty"`

	// Timeout to gracefully decommission nodes during downscaling. In seconds.
	// +kubebuilder:validation:Optional
	DecommissionTimeout *string `json:"decommissionTimeout,omitempty" tf:"decommission_timeout,omitempty"`

	// Maximum number of nodes in autoscaling subclusters.
	// +kubebuilder:validation:Optional
	MaxHostsCount *float64 `json:"maxHostsCount" tf:"max_hosts_count,omitempty"`

	// Time in seconds allotted for averaging metrics.
	// +kubebuilder:validation:Optional
	MeasurementDuration *string `json:"measurementDuration,omitempty" tf:"measurement_duration,omitempty"`

	// Bool flag -- whether to use preemptible compute instances. Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time if their resources are needed by Compute. For more information, see Preemptible Virtual Machines.
	// +kubebuilder:validation:Optional
	Preemptible *bool `json:"preemptible,omitempty" tf:"preemptible,omitempty"`

	// Minimum amount of time in seconds allotted for monitoring before Instance Groups can reduce the number of instances in the group. During this time, the group size doesn't decrease, even if the new metric values indicate that it should.
	// +kubebuilder:validation:Optional
	StabilizationDuration *string `json:"stabilizationDuration,omitempty" tf:"stabilization_duration,omitempty"`

	// The warmup time of the instance in seconds. During this time, traffic is sent to the instance, but instance metrics are not collected.
	// +kubebuilder:validation:Optional
	WarmupDuration *string `json:"warmupDuration,omitempty" tf:"warmup_duration,omitempty"`
}

type ClusterConfigInitParameters struct {

	// Data Proc specific options. The structure is documented below.
	Hadoop []HadoopInitParameters `json:"hadoop,omitempty" tf:"hadoop,omitempty"`

	// Configuration of the Data Proc subcluster. The structure is documented below.
	SubclusterSpec []SubclusterSpecInitParameters `json:"subclusterSpec,omitempty" tf:"subcluster_spec,omitempty"`

	// Version of Data Proc image.
	VersionID *string `json:"versionId,omitempty" tf:"version_id,omitempty"`
}

type ClusterConfigObservation struct {

	// Data Proc specific options. The structure is documented below.
	Hadoop []HadoopObservation `json:"hadoop,omitempty" tf:"hadoop,omitempty"`

	// Configuration of the Data Proc subcluster. The structure is documented below.
	SubclusterSpec []SubclusterSpecObservation `json:"subclusterSpec,omitempty" tf:"subcluster_spec,omitempty"`

	// Version of Data Proc image.
	VersionID *string `json:"versionId,omitempty" tf:"version_id,omitempty"`
}

type ClusterConfigParameters struct {

	// Data Proc specific options. The structure is documented below.
	// +kubebuilder:validation:Optional
	Hadoop []HadoopParameters `json:"hadoop,omitempty" tf:"hadoop,omitempty"`

	// Configuration of the Data Proc subcluster. The structure is documented below.
	// +kubebuilder:validation:Optional
	SubclusterSpec []SubclusterSpecParameters `json:"subclusterSpec" tf:"subcluster_spec,omitempty"`

	// Version of Data Proc image.
	// +kubebuilder:validation:Optional
	VersionID *string `json:"versionId,omitempty" tf:"version_id,omitempty"`
}

type ClusterInitParameters struct {

	// Name of the Object Storage bucket to use for Data Proc jobs. Data Proc Agent saves output of job driver's process to specified bucket. In order for this to work service account (specified by the service_account_id argument) should be given permission to create objects within this bucket.
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/storage/v1alpha1.Bucket
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("bucket",false)
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Reference to a Bucket in storage to populate bucket.
	// +kubebuilder:validation:Optional
	BucketRef *v1.Reference `json:"bucketRef,omitempty" tf:"-"`

	// Selector for a Bucket in storage to populate bucket.
	// +kubebuilder:validation:Optional
	BucketSelector *v1.Selector `json:"bucketSelector,omitempty" tf:"-"`

	// Configuration and resources for hosts that should be created with the cluster. The structure is documented below.
	ClusterConfig []ClusterConfigInitParameters `json:"clusterConfig,omitempty" tf:"cluster_config,omitempty"`

	// Inhibits deletion of the cluster.  Can be either true or false.
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// Description of the Data Proc cluster.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// ID of the folder to create a cluster in. If it is not provided, the default provider folder is used.
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/resourcemanager/v1alpha1.Folder
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// A list of host group IDs to place VMs of the cluster on.
	// +listType=set
	HostGroupIds []*string `json:"hostGroupIds,omitempty" tf:"host_group_ids,omitempty"`

	// A set of key/value label pairs to assign to the Data Proc cluster.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Name of a specific Data Proc cluster.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A list of security group IDs that the cluster belongs to.
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Service account to be used by the Data Proc agent to access resources of Yandex.Cloud. Selected service account should have mdb.dataproc.agent role on the folder where the Data Proc cluster will be located.
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/iam/v1alpha1.ServiceAccount
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	ServiceAccountID *string `json:"serviceAccountId,omitempty" tf:"service_account_id,omitempty"`

	// Reference to a ServiceAccount in iam to populate serviceAccountId.
	// +kubebuilder:validation:Optional
	ServiceAccountIDRef *v1.Reference `json:"serviceAccountIdRef,omitempty" tf:"-"`

	// Selector for a ServiceAccount in iam to populate serviceAccountId.
	// +kubebuilder:validation:Optional
	ServiceAccountIDSelector *v1.Selector `json:"serviceAccountIdSelector,omitempty" tf:"-"`

	// Whether to enable UI Proxy feature.
	UIProxy *bool `json:"uiProxy,omitempty" tf:"ui_proxy,omitempty"`

	// ID of the availability zone to create cluster in. If it is not provided, the default provider zone is used.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type ClusterObservation struct {

	// Name of the Object Storage bucket to use for Data Proc jobs. Data Proc Agent saves output of job driver's process to specified bucket. In order for this to work service account (specified by the service_account_id argument) should be given permission to create objects within this bucket.
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Configuration and resources for hosts that should be created with the cluster. The structure is documented below.
	ClusterConfig []ClusterConfigObservation `json:"clusterConfig,omitempty" tf:"cluster_config,omitempty"`

	// (Computed) The Data Proc cluster creation timestamp.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Inhibits deletion of the cluster.  Can be either true or false.
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// Description of the Data Proc cluster.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// ID of the folder to create a cluster in. If it is not provided, the default provider folder is used.
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// A list of host group IDs to place VMs of the cluster on.
	// +listType=set
	HostGroupIds []*string `json:"hostGroupIds,omitempty" tf:"host_group_ids,omitempty"`

	// (Computed) ID of a new Data Proc cluster.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A set of key/value label pairs to assign to the Data Proc cluster.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Name of a specific Data Proc cluster.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A list of security group IDs that the cluster belongs to.
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Service account to be used by the Data Proc agent to access resources of Yandex.Cloud. Selected service account should have mdb.dataproc.agent role on the folder where the Data Proc cluster will be located.
	ServiceAccountID *string `json:"serviceAccountId,omitempty" tf:"service_account_id,omitempty"`

	// Whether to enable UI Proxy feature.
	UIProxy *bool `json:"uiProxy,omitempty" tf:"ui_proxy,omitempty"`

	// ID of the availability zone to create cluster in. If it is not provided, the default provider zone is used.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type ClusterParameters struct {

	// Name of the Object Storage bucket to use for Data Proc jobs. Data Proc Agent saves output of job driver's process to specified bucket. In order for this to work service account (specified by the service_account_id argument) should be given permission to create objects within this bucket.
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/storage/v1alpha1.Bucket
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("bucket",false)
	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Reference to a Bucket in storage to populate bucket.
	// +kubebuilder:validation:Optional
	BucketRef *v1.Reference `json:"bucketRef,omitempty" tf:"-"`

	// Selector for a Bucket in storage to populate bucket.
	// +kubebuilder:validation:Optional
	BucketSelector *v1.Selector `json:"bucketSelector,omitempty" tf:"-"`

	// Configuration and resources for hosts that should be created with the cluster. The structure is documented below.
	// +kubebuilder:validation:Optional
	ClusterConfig []ClusterConfigParameters `json:"clusterConfig,omitempty" tf:"cluster_config,omitempty"`

	// Inhibits deletion of the cluster.  Can be either true or false.
	// +kubebuilder:validation:Optional
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// Description of the Data Proc cluster.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// ID of the folder to create a cluster in. If it is not provided, the default provider folder is used.
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/resourcemanager/v1alpha1.Folder
	// +kubebuilder:validation:Optional
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// A list of host group IDs to place VMs of the cluster on.
	// +kubebuilder:validation:Optional
	// +listType=set
	HostGroupIds []*string `json:"hostGroupIds,omitempty" tf:"host_group_ids,omitempty"`

	// A set of key/value label pairs to assign to the Data Proc cluster.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Name of a specific Data Proc cluster.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A list of security group IDs that the cluster belongs to.
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Service account to be used by the Data Proc agent to access resources of Yandex.Cloud. Selected service account should have mdb.dataproc.agent role on the folder where the Data Proc cluster will be located.
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/iam/v1alpha1.ServiceAccount
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ServiceAccountID *string `json:"serviceAccountId,omitempty" tf:"service_account_id,omitempty"`

	// Reference to a ServiceAccount in iam to populate serviceAccountId.
	// +kubebuilder:validation:Optional
	ServiceAccountIDRef *v1.Reference `json:"serviceAccountIdRef,omitempty" tf:"-"`

	// Selector for a ServiceAccount in iam to populate serviceAccountId.
	// +kubebuilder:validation:Optional
	ServiceAccountIDSelector *v1.Selector `json:"serviceAccountIdSelector,omitempty" tf:"-"`

	// Whether to enable UI Proxy feature.
	// +kubebuilder:validation:Optional
	UIProxy *bool `json:"uiProxy,omitempty" tf:"ui_proxy,omitempty"`

	// ID of the availability zone to create cluster in. If it is not provided, the default provider zone is used.
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type HadoopInitParameters struct {

	// List of initialization scripts. The structure is documented below.
	InitializationAction []InitializationActionInitParameters `json:"initializationAction,omitempty" tf:"initialization_action,omitempty"`

	// A set of key/value pairs that are used to configure cluster services.
	// +mapType=granular
	Properties map[string]*string `json:"properties,omitempty" tf:"properties,omitempty"`

	// List of SSH public keys to put to the hosts of the cluster. For information on how to connect to the cluster, see the official documentation.
	// +listType=set
	SSHPublicKeys []*string `json:"sshPublicKeys,omitempty" tf:"ssh_public_keys,omitempty"`

	// List of services to run on Data Proc cluster.
	// +listType=set
	Services []*string `json:"services,omitempty" tf:"services,omitempty"`
}

type HadoopObservation struct {

	// List of initialization scripts. The structure is documented below.
	InitializationAction []InitializationActionObservation `json:"initializationAction,omitempty" tf:"initialization_action,omitempty"`

	// A set of key/value pairs that are used to configure cluster services.
	// +mapType=granular
	Properties map[string]*string `json:"properties,omitempty" tf:"properties,omitempty"`

	// List of SSH public keys to put to the hosts of the cluster. For information on how to connect to the cluster, see the official documentation.
	// +listType=set
	SSHPublicKeys []*string `json:"sshPublicKeys,omitempty" tf:"ssh_public_keys,omitempty"`

	// List of services to run on Data Proc cluster.
	// +listType=set
	Services []*string `json:"services,omitempty" tf:"services,omitempty"`
}

type HadoopParameters struct {

	// List of initialization scripts. The structure is documented below.
	// +kubebuilder:validation:Optional
	InitializationAction []InitializationActionParameters `json:"initializationAction,omitempty" tf:"initialization_action,omitempty"`

	// A set of key/value pairs that are used to configure cluster services.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Properties map[string]*string `json:"properties,omitempty" tf:"properties,omitempty"`

	// List of SSH public keys to put to the hosts of the cluster. For information on how to connect to the cluster, see the official documentation.
	// +kubebuilder:validation:Optional
	// +listType=set
	SSHPublicKeys []*string `json:"sshPublicKeys,omitempty" tf:"ssh_public_keys,omitempty"`

	// List of services to run on Data Proc cluster.
	// +kubebuilder:validation:Optional
	// +listType=set
	Services []*string `json:"services,omitempty" tf:"services,omitempty"`
}

type InitializationActionInitParameters struct {

	// List of arguments of the initialization script.
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// Script execution timeout, in seconds.
	Timeout *string `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Script URI.
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type InitializationActionObservation struct {

	// List of arguments of the initialization script.
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// Script execution timeout, in seconds.
	Timeout *string `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Script URI.
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type InitializationActionParameters struct {

	// List of arguments of the initialization script.
	// +kubebuilder:validation:Optional
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// Script execution timeout, in seconds.
	// +kubebuilder:validation:Optional
	Timeout *string `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Script URI.
	// +kubebuilder:validation:Optional
	URI *string `json:"uri" tf:"uri,omitempty"`
}

type ResourcesInitParameters struct {

	// Volume of the storage available to a host, in gigabytes.
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Type of the storage of a host. One of network-hdd (default) or network-ssd.
	DiskTypeID *string `json:"diskTypeId,omitempty" tf:"disk_type_id,omitempty"`

	// The ID of the preset for computational resources available to a host. All available presets are listed in the documentation.
	ResourcePresetID *string `json:"resourcePresetId,omitempty" tf:"resource_preset_id,omitempty"`
}

type ResourcesObservation struct {

	// Volume of the storage available to a host, in gigabytes.
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// Type of the storage of a host. One of network-hdd (default) or network-ssd.
	DiskTypeID *string `json:"diskTypeId,omitempty" tf:"disk_type_id,omitempty"`

	// The ID of the preset for computational resources available to a host. All available presets are listed in the documentation.
	ResourcePresetID *string `json:"resourcePresetId,omitempty" tf:"resource_preset_id,omitempty"`
}

type ResourcesParameters struct {

	// Volume of the storage available to a host, in gigabytes.
	// +kubebuilder:validation:Optional
	DiskSize *float64 `json:"diskSize" tf:"disk_size,omitempty"`

	// Type of the storage of a host. One of network-hdd (default) or network-ssd.
	// +kubebuilder:validation:Optional
	DiskTypeID *string `json:"diskTypeId,omitempty" tf:"disk_type_id,omitempty"`

	// The ID of the preset for computational resources available to a host. All available presets are listed in the documentation.
	// +kubebuilder:validation:Optional
	ResourcePresetID *string `json:"resourcePresetId" tf:"resource_preset_id,omitempty"`
}

type SubclusterSpecInitParameters struct {

	// If true then assign public IP addresses to the hosts of the subclusters.
	AssignPublicIP *bool `json:"assignPublicIp,omitempty" tf:"assign_public_ip,omitempty"`

	// Autoscaling configuration for compute subclusters.
	AutoscalingConfig []AutoscalingConfigInitParameters `json:"autoscalingConfig,omitempty" tf:"autoscaling_config,omitempty"`

	// Number of hosts within Data Proc subcluster.
	HostsCount *float64 `json:"hostsCount,omitempty" tf:"hosts_count,omitempty"`

	// Name of the Data Proc subcluster.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Resources allocated to each host of the Data Proc subcluster. The structure is documented below.
	Resources []ResourcesInitParameters `json:"resources,omitempty" tf:"resources,omitempty"`

	// Role of the subcluster in the Data Proc cluster.
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	// The ID of the subnet, to which hosts of the subcluster belong. Subnets of all the subclusters must belong to the same VPC network.
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/vpc/v1alpha1.Subnet
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`
}

type SubclusterSpecObservation struct {

	// If true then assign public IP addresses to the hosts of the subclusters.
	AssignPublicIP *bool `json:"assignPublicIp,omitempty" tf:"assign_public_ip,omitempty"`

	// Autoscaling configuration for compute subclusters.
	AutoscalingConfig []AutoscalingConfigObservation `json:"autoscalingConfig,omitempty" tf:"autoscaling_config,omitempty"`

	// Number of hosts within Data Proc subcluster.
	HostsCount *float64 `json:"hostsCount,omitempty" tf:"hosts_count,omitempty"`

	// (Computed) ID of a new Data Proc cluster.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Name of the Data Proc subcluster.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Resources allocated to each host of the Data Proc subcluster. The structure is documented below.
	Resources []ResourcesObservation `json:"resources,omitempty" tf:"resources,omitempty"`

	// Role of the subcluster in the Data Proc cluster.
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	// The ID of the subnet, to which hosts of the subcluster belong. Subnets of all the subclusters must belong to the same VPC network.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`
}

type SubclusterSpecParameters struct {

	// If true then assign public IP addresses to the hosts of the subclusters.
	// +kubebuilder:validation:Optional
	AssignPublicIP *bool `json:"assignPublicIp,omitempty" tf:"assign_public_ip,omitempty"`

	// Autoscaling configuration for compute subclusters.
	// +kubebuilder:validation:Optional
	AutoscalingConfig []AutoscalingConfigParameters `json:"autoscalingConfig,omitempty" tf:"autoscaling_config,omitempty"`

	// Number of hosts within Data Proc subcluster.
	// +kubebuilder:validation:Optional
	HostsCount *float64 `json:"hostsCount" tf:"hosts_count,omitempty"`

	// Name of the Data Proc subcluster.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Resources allocated to each host of the Data Proc subcluster. The structure is documented below.
	// +kubebuilder:validation:Optional
	Resources []ResourcesParameters `json:"resources" tf:"resources,omitempty"`

	// Role of the subcluster in the Data Proc cluster.
	// +kubebuilder:validation:Optional
	Role *string `json:"role" tf:"role,omitempty"`

	// The ID of the subnet, to which hosts of the subcluster belong. Subnets of all the subclusters must belong to the same VPC network.
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/vpc/v1alpha1.Subnet
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`
}

// ClusterSpec defines the desired state of Cluster
type ClusterSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ClusterParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ClusterInitParameters `json:"initProvider,omitempty"`
}

// ClusterStatus defines the observed state of Cluster.
type ClusterStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ClusterObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Cluster is the Schema for the Clusters API. Manages a Data Proc cluster within Yandex.Cloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,yandex-cloud}
type Cluster struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.clusterConfig) || (has(self.initProvider) && has(self.initProvider.clusterConfig))",message="spec.forProvider.clusterConfig is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   ClusterSpec   `json:"spec"`
	Status ClusterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterList contains a list of Clusters
type ClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Cluster `json:"items"`
}

// Repository type metadata.
var (
	Cluster_Kind             = "Cluster"
	Cluster_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Cluster_Kind}.String()
	Cluster_KindAPIVersion   = Cluster_Kind + "." + CRDGroupVersion.String()
	Cluster_GroupVersionKind = CRDGroupVersion.WithKind(Cluster_Kind)
)

func init() {
	SchemeBuilder.Register(&Cluster{}, &ClusterList{})
}
