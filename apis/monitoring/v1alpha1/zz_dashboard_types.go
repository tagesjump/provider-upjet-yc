// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AutomaticInitParameters struct {
}

type AutomaticObservation struct {
}

type AutomaticParameters struct {
}

type ChartInitParameters struct {

	// Chart ID.
	// Chart ID
	ChartID *string `json:"chartId,omitempty" tf:"chart_id,omitempty"`

	// Parameter description.
	// Chart description in dashboard (not enabled in UI)
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Enable legend under chart.
	// Enable legend under chart
	DisplayLegend *bool `json:"displayLegend,omitempty" tf:"display_legend,omitempty"`

	// Fixed time interval for chart. Values:
	// Fixed time interval for chart
	Freeze *string `json:"freeze,omitempty" tf:"freeze,omitempty"`

	// Names settings.
	// Name hiding settings
	NameHidingSettings []NameHidingSettingsInitParameters `json:"nameHidingSettings,omitempty" tf:"name_hiding_settings,omitempty"`

	// Queries settings.
	// Queries
	Queries []QueriesInitParameters `json:"queries,omitempty" tf:"queries,omitempty"`

	// Time series settings.
	SeriesOverrides []SeriesOverridesInitParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Title or empty.
	// Chart widget title
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Visualization settings.
	// Visualization settings
	VisualizationSettings []VisualizationSettingsInitParameters `json:"visualizationSettings,omitempty" tf:"visualization_settings,omitempty"`
}

type ChartObservation struct {

	// Chart ID.
	// Chart ID
	ChartID *string `json:"chartId,omitempty" tf:"chart_id,omitempty"`

	// Parameter description.
	// Chart description in dashboard (not enabled in UI)
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Enable legend under chart.
	// Enable legend under chart
	DisplayLegend *bool `json:"displayLegend,omitempty" tf:"display_legend,omitempty"`

	// Fixed time interval for chart. Values:
	// Fixed time interval for chart
	Freeze *string `json:"freeze,omitempty" tf:"freeze,omitempty"`

	// Names settings.
	// Name hiding settings
	NameHidingSettings []NameHidingSettingsObservation `json:"nameHidingSettings,omitempty" tf:"name_hiding_settings,omitempty"`

	// Queries settings.
	// Queries
	Queries []QueriesObservation `json:"queries,omitempty" tf:"queries,omitempty"`

	// Time series settings.
	SeriesOverrides []SeriesOverridesObservation `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Title or empty.
	// Chart widget title
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Visualization settings.
	// Visualization settings
	VisualizationSettings []VisualizationSettingsObservation `json:"visualizationSettings,omitempty" tf:"visualization_settings,omitempty"`
}

type ChartParameters struct {

	// Chart ID.
	// Chart ID
	// +kubebuilder:validation:Optional
	ChartID *string `json:"chartId,omitempty" tf:"chart_id,omitempty"`

	// Parameter description.
	// Chart description in dashboard (not enabled in UI)
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Enable legend under chart.
	// Enable legend under chart
	// +kubebuilder:validation:Optional
	DisplayLegend *bool `json:"displayLegend,omitempty" tf:"display_legend,omitempty"`

	// Fixed time interval for chart. Values:
	// Fixed time interval for chart
	// +kubebuilder:validation:Optional
	Freeze *string `json:"freeze,omitempty" tf:"freeze,omitempty"`

	// Names settings.
	// Name hiding settings
	// +kubebuilder:validation:Optional
	NameHidingSettings []NameHidingSettingsParameters `json:"nameHidingSettings,omitempty" tf:"name_hiding_settings,omitempty"`

	// Queries settings.
	// Queries
	// +kubebuilder:validation:Optional
	Queries []QueriesParameters `json:"queries,omitempty" tf:"queries,omitempty"`

	// Time series settings.
	// +kubebuilder:validation:Optional
	SeriesOverrides []SeriesOverridesParameters `json:"seriesOverrides,omitempty" tf:"series_overrides,omitempty"`

	// Title or empty.
	// Chart widget title
	// +kubebuilder:validation:Optional
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Visualization settings.
	// Visualization settings
	// +kubebuilder:validation:Optional
	VisualizationSettings []VisualizationSettingsParameters `json:"visualizationSettings,omitempty" tf:"visualization_settings,omitempty"`
}

type ColorSchemeSettingsInitParameters struct {

	// Automatic color scheme. Oneof: automatic, standard or gradient.
	// Automatic color scheme
	Automatic []AutomaticInitParameters `json:"automatic,omitempty" tf:"automatic,omitempty"`

	// Gradient color scheme. Oneof: automatic, standard or gradient.
	// Gradient color scheme
	Gradient []GradientInitParameters `json:"gradient,omitempty" tf:"gradient,omitempty"`

	// Standard color scheme. Oneof: automatic, standard or gradient.
	// Standard color scheme
	Standard []StandardInitParameters `json:"standard,omitempty" tf:"standard,omitempty"`
}

type ColorSchemeSettingsObservation struct {

	// Automatic color scheme. Oneof: automatic, standard or gradient.
	// Automatic color scheme
	Automatic []AutomaticParameters `json:"automatic,omitempty" tf:"automatic,omitempty"`

	// Gradient color scheme. Oneof: automatic, standard or gradient.
	// Gradient color scheme
	Gradient []GradientObservation `json:"gradient,omitempty" tf:"gradient,omitempty"`

	// Standard color scheme. Oneof: automatic, standard or gradient.
	// Standard color scheme
	Standard []StandardParameters `json:"standard,omitempty" tf:"standard,omitempty"`
}

type ColorSchemeSettingsParameters struct {

	// Automatic color scheme. Oneof: automatic, standard or gradient.
	// Automatic color scheme
	// +kubebuilder:validation:Optional
	Automatic []AutomaticParameters `json:"automatic,omitempty" tf:"automatic,omitempty"`

	// Gradient color scheme. Oneof: automatic, standard or gradient.
	// Gradient color scheme
	// +kubebuilder:validation:Optional
	Gradient []GradientParameters `json:"gradient,omitempty" tf:"gradient,omitempty"`

	// Standard color scheme. Oneof: automatic, standard or gradient.
	// Standard color scheme
	// +kubebuilder:validation:Optional
	Standard []StandardParameters `json:"standard,omitempty" tf:"standard,omitempty"`
}

type CustomInitParameters struct {

	// Default value.
	// Default value
	DefaultValues []*string `json:"defaultValues,omitempty" tf:"default_values,omitempty"`

	// Specifies the multiselectable values of parameter.
	// Specifies the multiselectable values of parameter
	Multiselectable *bool `json:"multiselectable,omitempty" tf:"multiselectable,omitempty"`

	// Parameter values.
	// Parameter values
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type CustomObservation struct {

	// Default value.
	// Default value
	DefaultValues []*string `json:"defaultValues,omitempty" tf:"default_values,omitempty"`

	// Specifies the multiselectable values of parameter.
	// Specifies the multiselectable values of parameter
	Multiselectable *bool `json:"multiselectable,omitempty" tf:"multiselectable,omitempty"`

	// Parameter values.
	// Parameter values
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type CustomParameters struct {

	// Default value.
	// Default value
	// +kubebuilder:validation:Optional
	DefaultValues []*string `json:"defaultValues,omitempty" tf:"default_values,omitempty"`

	// Specifies the multiselectable values of parameter.
	// Specifies the multiselectable values of parameter
	// +kubebuilder:validation:Optional
	Multiselectable *bool `json:"multiselectable,omitempty" tf:"multiselectable,omitempty"`

	// Parameter values.
	// Parameter values
	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type DashboardInitParameters struct {

	// Dashboard description.
	// Dashboard description
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Folder that the resource belongs to. If value is omitted, the default provider folder is used.
	// Folder ID
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/resourcemanager/v1alpha1.Folder
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// A set of key/value label pairs to assign to the Dashboard.
	// Dashboard labels
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Name of the Dashboard.
	// Dashboard name, used as local identifier in folder_id
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Dashboard parametrization
	// Dashboard parametrization
	Parametrization []ParametrizationInitParameters `json:"parametrization,omitempty" tf:"parametrization,omitempty"`

	// Dashboard title.
	// Dashboard title
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Widgets
	// Widgets
	Widgets []WidgetsInitParameters `json:"widgets,omitempty" tf:"widgets,omitempty"`
}

type DashboardObservation struct {

	// Dashboard ID
	DashboardID *string `json:"dashboardId,omitempty" tf:"dashboard_id,omitempty"`

	// Dashboard description.
	// Dashboard description
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Folder that the resource belongs to. If value is omitted, the default provider folder is used.
	// Folder ID
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Parameter identifier
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A set of key/value label pairs to assign to the Dashboard.
	// Dashboard labels
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Name of the Dashboard.
	// Dashboard name, used as local identifier in folder_id
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Dashboard parametrization
	// Dashboard parametrization
	Parametrization []ParametrizationObservation `json:"parametrization,omitempty" tf:"parametrization,omitempty"`

	// Dashboard title.
	// Dashboard title
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Widgets
	// Widgets
	Widgets []WidgetsObservation `json:"widgets,omitempty" tf:"widgets,omitempty"`
}

type DashboardParameters struct {

	// Dashboard description.
	// Dashboard description
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Folder that the resource belongs to. If value is omitted, the default provider folder is used.
	// Folder ID
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/resourcemanager/v1alpha1.Folder
	// +kubebuilder:validation:Optional
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// A set of key/value label pairs to assign to the Dashboard.
	// Dashboard labels
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Name of the Dashboard.
	// Dashboard name, used as local identifier in folder_id
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Dashboard parametrization
	// Dashboard parametrization
	// +kubebuilder:validation:Optional
	Parametrization []ParametrizationParameters `json:"parametrization,omitempty" tf:"parametrization,omitempty"`

	// Dashboard title.
	// Dashboard title
	// +kubebuilder:validation:Optional
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Widgets
	// Widgets
	// +kubebuilder:validation:Optional
	Widgets []WidgetsParameters `json:"widgets,omitempty" tf:"widgets,omitempty"`
}

type DownsamplingInitParameters struct {

	// Disable downsampling.
	// Disable downsampling
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// Parameters for filling gaps in data.
	// Parameters for filling gaps in data
	GapFilling *string `json:"gapFilling,omitempty" tf:"gap_filling,omitempty"`

	// Function that is used for downsampling.
	// Function that is used for downsampling
	GridAggregation *string `json:"gridAggregation,omitempty" tf:"grid_aggregation,omitempty"`

	// Time interval (grid) for downsampling in milliseconds. Points in the specified range are aggregated into one time point
	// Time interval (grid) for downsampling in milliseconds. Points in the specified range are aggregated into one time point
	GridInterval *float64 `json:"gridInterval,omitempty" tf:"grid_interval,omitempty"`

	// Maximum number of points to be returned.
	// Maximum number of points to be returned
	MaxPoints *float64 `json:"maxPoints,omitempty" tf:"max_points,omitempty"`
}

type DownsamplingObservation struct {

	// Disable downsampling.
	// Disable downsampling
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// Parameters for filling gaps in data.
	// Parameters for filling gaps in data
	GapFilling *string `json:"gapFilling,omitempty" tf:"gap_filling,omitempty"`

	// Function that is used for downsampling.
	// Function that is used for downsampling
	GridAggregation *string `json:"gridAggregation,omitempty" tf:"grid_aggregation,omitempty"`

	// Time interval (grid) for downsampling in milliseconds. Points in the specified range are aggregated into one time point
	// Time interval (grid) for downsampling in milliseconds. Points in the specified range are aggregated into one time point
	GridInterval *float64 `json:"gridInterval,omitempty" tf:"grid_interval,omitempty"`

	// Maximum number of points to be returned.
	// Maximum number of points to be returned
	MaxPoints *float64 `json:"maxPoints,omitempty" tf:"max_points,omitempty"`
}

type DownsamplingParameters struct {

	// Disable downsampling.
	// Disable downsampling
	// +kubebuilder:validation:Optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// Parameters for filling gaps in data.
	// Parameters for filling gaps in data
	// +kubebuilder:validation:Optional
	GapFilling *string `json:"gapFilling,omitempty" tf:"gap_filling,omitempty"`

	// Function that is used for downsampling.
	// Function that is used for downsampling
	// +kubebuilder:validation:Optional
	GridAggregation *string `json:"gridAggregation,omitempty" tf:"grid_aggregation,omitempty"`

	// Time interval (grid) for downsampling in milliseconds. Points in the specified range are aggregated into one time point
	// Time interval (grid) for downsampling in milliseconds. Points in the specified range are aggregated into one time point
	// +kubebuilder:validation:Optional
	GridInterval *float64 `json:"gridInterval,omitempty" tf:"grid_interval,omitempty"`

	// Maximum number of points to be returned.
	// Maximum number of points to be returned
	// +kubebuilder:validation:Optional
	MaxPoints *float64 `json:"maxPoints,omitempty" tf:"max_points,omitempty"`
}

type GradientInitParameters struct {

	// Gradient green value.
	// Gradient green value
	GreenValue *string `json:"greenValue,omitempty" tf:"green_value,omitempty"`

	// Gradient red value.
	// Gradient red value
	RedValue *string `json:"redValue,omitempty" tf:"red_value,omitempty"`

	// Gradient violet value.
	// Gradient violet_value
	VioletValue *string `json:"violetValue,omitempty" tf:"violet_value,omitempty"`

	// Gradient yellow value.
	// Gradient yellow value
	YellowValue *string `json:"yellowValue,omitempty" tf:"yellow_value,omitempty"`
}

type GradientObservation struct {

	// Gradient green value.
	// Gradient green value
	GreenValue *string `json:"greenValue,omitempty" tf:"green_value,omitempty"`

	// Gradient red value.
	// Gradient red value
	RedValue *string `json:"redValue,omitempty" tf:"red_value,omitempty"`

	// Gradient violet value.
	// Gradient violet_value
	VioletValue *string `json:"violetValue,omitempty" tf:"violet_value,omitempty"`

	// Gradient yellow value.
	// Gradient yellow value
	YellowValue *string `json:"yellowValue,omitempty" tf:"yellow_value,omitempty"`
}

type GradientParameters struct {

	// Gradient green value.
	// Gradient green value
	// +kubebuilder:validation:Optional
	GreenValue *string `json:"greenValue,omitempty" tf:"green_value,omitempty"`

	// Gradient red value.
	// Gradient red value
	// +kubebuilder:validation:Optional
	RedValue *string `json:"redValue,omitempty" tf:"red_value,omitempty"`

	// Gradient violet value.
	// Gradient violet_value
	// +kubebuilder:validation:Optional
	VioletValue *string `json:"violetValue,omitempty" tf:"violet_value,omitempty"`

	// Gradient yellow value.
	// Gradient yellow value
	// +kubebuilder:validation:Optional
	YellowValue *string `json:"yellowValue,omitempty" tf:"yellow_value,omitempty"`
}

type HeatmapSettingsInitParameters struct {

	// Gradient green value.
	// Heatmap green value
	GreenValue *string `json:"greenValue,omitempty" tf:"green_value,omitempty"`

	// Gradient red value.
	// Heatmap red value
	RedValue *string `json:"redValue,omitempty" tf:"red_value,omitempty"`

	// Gradient violet value.
	// Heatmap violet_value
	VioletValue *string `json:"violetValue,omitempty" tf:"violet_value,omitempty"`

	// Gradient yellow value.
	// Heatmap yellow value
	YellowValue *string `json:"yellowValue,omitempty" tf:"yellow_value,omitempty"`
}

type HeatmapSettingsObservation struct {

	// Gradient green value.
	// Heatmap green value
	GreenValue *string `json:"greenValue,omitempty" tf:"green_value,omitempty"`

	// Gradient red value.
	// Heatmap red value
	RedValue *string `json:"redValue,omitempty" tf:"red_value,omitempty"`

	// Gradient violet value.
	// Heatmap violet_value
	VioletValue *string `json:"violetValue,omitempty" tf:"violet_value,omitempty"`

	// Gradient yellow value.
	// Heatmap yellow value
	YellowValue *string `json:"yellowValue,omitempty" tf:"yellow_value,omitempty"`
}

type HeatmapSettingsParameters struct {

	// Gradient green value.
	// Heatmap green value
	// +kubebuilder:validation:Optional
	GreenValue *string `json:"greenValue,omitempty" tf:"green_value,omitempty"`

	// Gradient red value.
	// Heatmap red value
	// +kubebuilder:validation:Optional
	RedValue *string `json:"redValue,omitempty" tf:"red_value,omitempty"`

	// Gradient violet value.
	// Heatmap violet_value
	// +kubebuilder:validation:Optional
	VioletValue *string `json:"violetValue,omitempty" tf:"violet_value,omitempty"`

	// Gradient yellow value.
	// Heatmap yellow value
	// +kubebuilder:validation:Optional
	YellowValue *string `json:"yellowValue,omitempty" tf:"yellow_value,omitempty"`
}

type LabelValuesInitParameters struct {

	// Default value.
	// Default value
	DefaultValues []*string `json:"defaultValues,omitempty" tf:"default_values,omitempty"`

	// Labels folder ID.
	// Folder ID
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/resourcemanager/v1alpha1.Folder
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// Label key to list label values.
	// Required. Label key to list label values
	LabelKey *string `json:"labelKey,omitempty" tf:"label_key,omitempty"`

	// Specifies the multiselectable values of parameter.
	// Specifies the multiselectable values of parameter
	Multiselectable *bool `json:"multiselectable,omitempty" tf:"multiselectable,omitempty"`

	// dashboard predefined parameters selector.
	// Required. Selectors to select metric label values
	Selectors *string `json:"selectors,omitempty" tf:"selectors,omitempty"`
}

type LabelValuesObservation struct {

	// Default value.
	// Default value
	DefaultValues []*string `json:"defaultValues,omitempty" tf:"default_values,omitempty"`

	// Labels folder ID.
	// Folder ID
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Label key to list label values.
	// Required. Label key to list label values
	LabelKey *string `json:"labelKey,omitempty" tf:"label_key,omitempty"`

	// Specifies the multiselectable values of parameter.
	// Specifies the multiselectable values of parameter
	Multiselectable *bool `json:"multiselectable,omitempty" tf:"multiselectable,omitempty"`

	// dashboard predefined parameters selector.
	// Required. Selectors to select metric label values
	Selectors *string `json:"selectors,omitempty" tf:"selectors,omitempty"`
}

type LabelValuesParameters struct {

	// Default value.
	// Default value
	// +kubebuilder:validation:Optional
	DefaultValues []*string `json:"defaultValues,omitempty" tf:"default_values,omitempty"`

	// Labels folder ID.
	// Folder ID
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/resourcemanager/v1alpha1.Folder
	// +kubebuilder:validation:Optional
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// Label key to list label values.
	// Required. Label key to list label values
	// +kubebuilder:validation:Optional
	LabelKey *string `json:"labelKey" tf:"label_key,omitempty"`

	// Specifies the multiselectable values of parameter.
	// Specifies the multiselectable values of parameter
	// +kubebuilder:validation:Optional
	Multiselectable *bool `json:"multiselectable,omitempty" tf:"multiselectable,omitempty"`

	// dashboard predefined parameters selector.
	// Required. Selectors to select metric label values
	// +kubebuilder:validation:Optional
	Selectors *string `json:"selectors,omitempty" tf:"selectors,omitempty"`
}

type LeftInitParameters struct {

	// Max value in extended number format or empty.
	// Max value in extended number format or empty
	Max *string `json:"max,omitempty" tf:"max,omitempty"`

	// Min value in extended number format or empty.
	// Min value in extended number format or empty
	Min *string `json:"min,omitempty" tf:"min,omitempty"`

	// Tick value precision (null as default, 0-7 in other cases).
	// Tick value precision (null as default, 0-7 in other cases)
	Precision *float64 `json:"precision,omitempty" tf:"precision,omitempty"`

	// Title or empty.
	// Title or empty
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Type. Values:
	// Type
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Unit format. Values:
	// Unit format
	UnitFormat *string `json:"unitFormat,omitempty" tf:"unit_format,omitempty"`
}

type LeftObservation struct {

	// Max value in extended number format or empty.
	// Max value in extended number format or empty
	Max *string `json:"max,omitempty" tf:"max,omitempty"`

	// Min value in extended number format or empty.
	// Min value in extended number format or empty
	Min *string `json:"min,omitempty" tf:"min,omitempty"`

	// Tick value precision (null as default, 0-7 in other cases).
	// Tick value precision (null as default, 0-7 in other cases)
	Precision *float64 `json:"precision,omitempty" tf:"precision,omitempty"`

	// Title or empty.
	// Title or empty
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Type. Values:
	// Type
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Unit format. Values:
	// Unit format
	UnitFormat *string `json:"unitFormat,omitempty" tf:"unit_format,omitempty"`
}

type LeftParameters struct {

	// Max value in extended number format or empty.
	// Max value in extended number format or empty
	// +kubebuilder:validation:Optional
	Max *string `json:"max,omitempty" tf:"max,omitempty"`

	// Min value in extended number format or empty.
	// Min value in extended number format or empty
	// +kubebuilder:validation:Optional
	Min *string `json:"min,omitempty" tf:"min,omitempty"`

	// Tick value precision (null as default, 0-7 in other cases).
	// Tick value precision (null as default, 0-7 in other cases)
	// +kubebuilder:validation:Optional
	Precision *float64 `json:"precision,omitempty" tf:"precision,omitempty"`

	// Title or empty.
	// Title or empty
	// +kubebuilder:validation:Optional
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Type. Values:
	// Type
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Unit format. Values:
	// Unit format
	// +kubebuilder:validation:Optional
	UnitFormat *string `json:"unitFormat,omitempty" tf:"unit_format,omitempty"`
}

type NameHidingSettingsInitParameters struct {

	// Series name.
	Names []*string `json:"names,omitempty" tf:"names,omitempty"`

	// True if we want to show concrete series names only, false if we want to hide concrete series names.
	// True if we want to show concrete series names only, false if we want to hide concrete series names
	Positive *bool `json:"positive,omitempty" tf:"positive,omitempty"`
}

type NameHidingSettingsObservation struct {

	// Series name.
	Names []*string `json:"names,omitempty" tf:"names,omitempty"`

	// True if we want to show concrete series names only, false if we want to hide concrete series names.
	// True if we want to show concrete series names only, false if we want to hide concrete series names
	Positive *bool `json:"positive,omitempty" tf:"positive,omitempty"`
}

type NameHidingSettingsParameters struct {

	// Series name.
	// +kubebuilder:validation:Optional
	Names []*string `json:"names,omitempty" tf:"names,omitempty"`

	// True if we want to show concrete series names only, false if we want to hide concrete series names.
	// True if we want to show concrete series names only, false if we want to hide concrete series names
	// +kubebuilder:validation:Optional
	Positive *bool `json:"positive,omitempty" tf:"positive,omitempty"`
}

type ParametersInitParameters struct {

	// Custom values parameter. Oneof: label_values, custom, text.
	// Custom parameter
	Custom []CustomInitParameters `json:"custom,omitempty" tf:"custom,omitempty"`

	// Parameter description.
	// Parameter description
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// UI-visibility.
	// UI-visibility
	Hidden *bool `json:"hidden,omitempty" tf:"hidden,omitempty"`

	// Parameter identifier
	// Parameter identifier
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Label values parameter. Oneof: label_values, custom, text.
	// Label values parameter
	LabelValues []LabelValuesInitParameters `json:"labelValues,omitempty" tf:"label_values,omitempty"`

	// Text parameter. Oneof: label_values, custom, text.
	// Text parameter
	Text []TextInitParameters `json:"text,omitempty" tf:"text,omitempty"`

	// UI-visible title of the parameter.
	// UI-visible title of the parameter
	Title *string `json:"title,omitempty" tf:"title,omitempty"`
}

type ParametersObservation struct {

	// Custom values parameter. Oneof: label_values, custom, text.
	// Custom parameter
	Custom []CustomObservation `json:"custom,omitempty" tf:"custom,omitempty"`

	// Parameter description.
	// Parameter description
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// UI-visibility.
	// UI-visibility
	Hidden *bool `json:"hidden,omitempty" tf:"hidden,omitempty"`

	// Parameter identifier
	// Parameter identifier
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Label values parameter. Oneof: label_values, custom, text.
	// Label values parameter
	LabelValues []LabelValuesObservation `json:"labelValues,omitempty" tf:"label_values,omitempty"`

	// Text parameter. Oneof: label_values, custom, text.
	// Text parameter
	Text []TextObservation `json:"text,omitempty" tf:"text,omitempty"`

	// UI-visible title of the parameter.
	// UI-visible title of the parameter
	Title *string `json:"title,omitempty" tf:"title,omitempty"`
}

type ParametersParameters struct {

	// Custom values parameter. Oneof: label_values, custom, text.
	// Custom parameter
	// +kubebuilder:validation:Optional
	Custom []CustomParameters `json:"custom,omitempty" tf:"custom,omitempty"`

	// Parameter description.
	// Parameter description
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// UI-visibility.
	// UI-visibility
	// +kubebuilder:validation:Optional
	Hidden *bool `json:"hidden,omitempty" tf:"hidden,omitempty"`

	// Parameter identifier
	// Parameter identifier
	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`

	// Label values parameter. Oneof: label_values, custom, text.
	// Label values parameter
	// +kubebuilder:validation:Optional
	LabelValues []LabelValuesParameters `json:"labelValues,omitempty" tf:"label_values,omitempty"`

	// Text parameter. Oneof: label_values, custom, text.
	// Text parameter
	// +kubebuilder:validation:Optional
	Text []TextParameters `json:"text,omitempty" tf:"text,omitempty"`

	// UI-visible title of the parameter.
	// UI-visible title of the parameter
	// +kubebuilder:validation:Optional
	Title *string `json:"title,omitempty" tf:"title,omitempty"`
}

type ParametrizationInitParameters struct {

	// parameters list.
	// Dashboard parameter
	Parameters []ParametersInitParameters `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// dashboard predefined parameters selector.
	// Predefined selectors
	Selectors *string `json:"selectors,omitempty" tf:"selectors,omitempty"`
}

type ParametrizationObservation struct {

	// parameters list.
	// Dashboard parameter
	Parameters []ParametersObservation `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// dashboard predefined parameters selector.
	// Predefined selectors
	Selectors *string `json:"selectors,omitempty" tf:"selectors,omitempty"`
}

type ParametrizationParameters struct {

	// parameters list.
	// Dashboard parameter
	// +kubebuilder:validation:Optional
	Parameters []ParametersParameters `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// dashboard predefined parameters selector.
	// Predefined selectors
	// +kubebuilder:validation:Optional
	Selectors *string `json:"selectors,omitempty" tf:"selectors,omitempty"`
}

type PositionInitParameters struct {

	// Height.
	// Required. Height
	H *float64 `json:"h,omitempty" tf:"h,omitempty"`

	// Width.
	// Required. Weight
	W *float64 `json:"w,omitempty" tf:"w,omitempty"`

	// X-axis top-left corner coordinate.
	// Required. X-axis top-left corner coordinate
	X *float64 `json:"x,omitempty" tf:"x,omitempty"`

	// Y-axis top-left corner coordinate.
	// Required. Y-axis top-left corner coordinate
	Y *float64 `json:"y,omitempty" tf:"y,omitempty"`
}

type PositionObservation struct {

	// Height.
	// Required. Height
	H *float64 `json:"h,omitempty" tf:"h,omitempty"`

	// Width.
	// Required. Weight
	W *float64 `json:"w,omitempty" tf:"w,omitempty"`

	// X-axis top-left corner coordinate.
	// Required. X-axis top-left corner coordinate
	X *float64 `json:"x,omitempty" tf:"x,omitempty"`

	// Y-axis top-left corner coordinate.
	// Required. Y-axis top-left corner coordinate
	Y *float64 `json:"y,omitempty" tf:"y,omitempty"`
}

type PositionParameters struct {

	// Height.
	// Required. Height
	// +kubebuilder:validation:Optional
	H *float64 `json:"h,omitempty" tf:"h,omitempty"`

	// Width.
	// Required. Weight
	// +kubebuilder:validation:Optional
	W *float64 `json:"w,omitempty" tf:"w,omitempty"`

	// X-axis top-left corner coordinate.
	// Required. X-axis top-left corner coordinate
	// +kubebuilder:validation:Optional
	X *float64 `json:"x,omitempty" tf:"x,omitempty"`

	// Y-axis top-left corner coordinate.
	// Required. Y-axis top-left corner coordinate
	// +kubebuilder:validation:Optional
	Y *float64 `json:"y,omitempty" tf:"y,omitempty"`
}

type QueriesInitParameters struct {

	// Downsamplang settings.
	// Downsampling settings
	Downsampling []DownsamplingInitParameters `json:"downsampling,omitempty" tf:"downsampling,omitempty"`

	// Query targets.
	// Downsampling settings
	Target []TargetInitParameters `json:"target,omitempty" tf:"target,omitempty"`
}

type QueriesObservation struct {

	// Downsamplang settings.
	// Downsampling settings
	Downsampling []DownsamplingObservation `json:"downsampling,omitempty" tf:"downsampling,omitempty"`

	// Query targets.
	// Downsampling settings
	Target []TargetObservation `json:"target,omitempty" tf:"target,omitempty"`
}

type QueriesParameters struct {

	// Downsamplang settings.
	// Downsampling settings
	// +kubebuilder:validation:Optional
	Downsampling []DownsamplingParameters `json:"downsampling,omitempty" tf:"downsampling,omitempty"`

	// Query targets.
	// Downsampling settings
	// +kubebuilder:validation:Optional
	Target []TargetParameters `json:"target,omitempty" tf:"target,omitempty"`
}

type RightInitParameters struct {

	// Max value in extended number format or empty.
	// Max value in extended number format or empty
	Max *string `json:"max,omitempty" tf:"max,omitempty"`

	// Min value in extended number format or empty.
	// Min value in extended number format or empty
	Min *string `json:"min,omitempty" tf:"min,omitempty"`

	// Tick value precision (null as default, 0-7 in other cases).
	// Tick value precision (null as default, 0-7 in other cases)
	Precision *float64 `json:"precision,omitempty" tf:"precision,omitempty"`

	// Title or empty.
	// Title or empty
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Type. Values:
	// Type
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Unit format. Values:
	// Unit format
	UnitFormat *string `json:"unitFormat,omitempty" tf:"unit_format,omitempty"`
}

type RightObservation struct {

	// Max value in extended number format or empty.
	// Max value in extended number format or empty
	Max *string `json:"max,omitempty" tf:"max,omitempty"`

	// Min value in extended number format or empty.
	// Min value in extended number format or empty
	Min *string `json:"min,omitempty" tf:"min,omitempty"`

	// Tick value precision (null as default, 0-7 in other cases).
	// Tick value precision (null as default, 0-7 in other cases)
	Precision *float64 `json:"precision,omitempty" tf:"precision,omitempty"`

	// Title or empty.
	// Title or empty
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Type. Values:
	// Type
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Unit format. Values:
	// Unit format
	UnitFormat *string `json:"unitFormat,omitempty" tf:"unit_format,omitempty"`
}

type RightParameters struct {

	// Max value in extended number format or empty.
	// Max value in extended number format or empty
	// +kubebuilder:validation:Optional
	Max *string `json:"max,omitempty" tf:"max,omitempty"`

	// Min value in extended number format or empty.
	// Min value in extended number format or empty
	// +kubebuilder:validation:Optional
	Min *string `json:"min,omitempty" tf:"min,omitempty"`

	// Tick value precision (null as default, 0-7 in other cases).
	// Tick value precision (null as default, 0-7 in other cases)
	// +kubebuilder:validation:Optional
	Precision *float64 `json:"precision,omitempty" tf:"precision,omitempty"`

	// Title or empty.
	// Title or empty
	// +kubebuilder:validation:Optional
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Type. Values:
	// Type
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Unit format. Values:
	// Unit format
	// +kubebuilder:validation:Optional
	UnitFormat *string `json:"unitFormat,omitempty" tf:"unit_format,omitempty"`
}

type SeriesOverridesInitParameters struct {

	// Series name or empty.
	// Series name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Override settings.
	// Override settings
	Settings []SettingsInitParameters `json:"settings,omitempty" tf:"settings,omitempty"`

	// Series index. Oneof: name or target_index.
	// Target index
	TargetIndex *string `json:"targetIndex,omitempty" tf:"target_index,omitempty"`
}

type SeriesOverridesObservation struct {

	// Series name or empty.
	// Series name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Override settings.
	// Override settings
	Settings []SettingsObservation `json:"settings,omitempty" tf:"settings,omitempty"`

	// Series index. Oneof: name or target_index.
	// Target index
	TargetIndex *string `json:"targetIndex,omitempty" tf:"target_index,omitempty"`
}

type SeriesOverridesParameters struct {

	// Series name or empty.
	// Series name
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Override settings.
	// Override settings
	// +kubebuilder:validation:Optional
	Settings []SettingsParameters `json:"settings,omitempty" tf:"settings,omitempty"`

	// Series index. Oneof: name or target_index.
	// Target index
	// +kubebuilder:validation:Optional
	TargetIndex *string `json:"targetIndex,omitempty" tf:"target_index,omitempty"`
}

type SettingsInitParameters struct {

	// Series color or empty.
	// Series color or empty
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// Stack grow down.
	// Stack grow down
	GrowDown *bool `json:"growDown,omitempty" tf:"grow_down,omitempty"`

	// Series name or empty.
	// Series name or empty
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Stack name or empty.
	// Stack name or empty
	StackName *string `json:"stackName,omitempty" tf:"stack_name,omitempty"`

	// Type. Values:
	// Type
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Yaxis position.
	// Yaxis position
	YaxisPosition *string `json:"yaxisPosition,omitempty" tf:"yaxis_position,omitempty"`
}

type SettingsObservation struct {

	// Series color or empty.
	// Series color or empty
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// Stack grow down.
	// Stack grow down
	GrowDown *bool `json:"growDown,omitempty" tf:"grow_down,omitempty"`

	// Series name or empty.
	// Series name or empty
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Stack name or empty.
	// Stack name or empty
	StackName *string `json:"stackName,omitempty" tf:"stack_name,omitempty"`

	// Type. Values:
	// Type
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Yaxis position.
	// Yaxis position
	YaxisPosition *string `json:"yaxisPosition,omitempty" tf:"yaxis_position,omitempty"`
}

type SettingsParameters struct {

	// Series color or empty.
	// Series color or empty
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// Stack grow down.
	// Stack grow down
	// +kubebuilder:validation:Optional
	GrowDown *bool `json:"growDown,omitempty" tf:"grow_down,omitempty"`

	// Series name or empty.
	// Series name or empty
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Stack name or empty.
	// Stack name or empty
	// +kubebuilder:validation:Optional
	StackName *string `json:"stackName,omitempty" tf:"stack_name,omitempty"`

	// Type. Values:
	// Type
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Yaxis position.
	// Yaxis position
	// +kubebuilder:validation:Optional
	YaxisPosition *string `json:"yaxisPosition,omitempty" tf:"yaxis_position,omitempty"`
}

type StandardInitParameters struct {
}

type StandardObservation struct {
}

type StandardParameters struct {
}

type TargetInitParameters struct {

	// Checks that target is visible or invisible.
	// Checks that target is visible or invisible
	Hidden *bool `json:"hidden,omitempty" tf:"hidden,omitempty"`

	// Query.
	// Required. Query
	Query *string `json:"query,omitempty" tf:"query,omitempty"`

	// Text mode enabled.
	// Text mode
	TextMode *bool `json:"textMode,omitempty" tf:"text_mode,omitempty"`
}

type TargetObservation struct {

	// Checks that target is visible or invisible.
	// Checks that target is visible or invisible
	Hidden *bool `json:"hidden,omitempty" tf:"hidden,omitempty"`

	// Query.
	// Required. Query
	Query *string `json:"query,omitempty" tf:"query,omitempty"`

	// Text mode enabled.
	// Text mode
	TextMode *bool `json:"textMode,omitempty" tf:"text_mode,omitempty"`
}

type TargetParameters struct {

	// Checks that target is visible or invisible.
	// Checks that target is visible or invisible
	// +kubebuilder:validation:Optional
	Hidden *bool `json:"hidden,omitempty" tf:"hidden,omitempty"`

	// Query.
	// Required. Query
	// +kubebuilder:validation:Optional
	Query *string `json:"query,omitempty" tf:"query,omitempty"`

	// Text mode enabled.
	// Text mode
	// +kubebuilder:validation:Optional
	TextMode *bool `json:"textMode,omitempty" tf:"text_mode,omitempty"`
}

type TextInitParameters struct {

	// Default value.
	// Default value
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`
}

type TextObservation struct {

	// Default value.
	// Default value
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`
}

type TextParameters struct {

	// Default value.
	// Default value
	// +kubebuilder:validation:Optional
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`
}

type TitleInitParameters struct {

	// Title size. Values:
	// Title size
	Size *string `json:"size,omitempty" tf:"size,omitempty"`

	// Text widget settings. Oneof: text, title or chart.
	// Title text
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type TitleObservation struct {

	// Title size. Values:
	// Title size
	Size *string `json:"size,omitempty" tf:"size,omitempty"`

	// Text widget settings. Oneof: text, title or chart.
	// Title text
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type TitleParameters struct {

	// Title size. Values:
	// Title size
	// +kubebuilder:validation:Optional
	Size *string `json:"size,omitempty" tf:"size,omitempty"`

	// Text widget settings. Oneof: text, title or chart.
	// Title text
	// +kubebuilder:validation:Optional
	Text *string `json:"text" tf:"text,omitempty"`
}

type VisualizationSettingsInitParameters struct {

	// Aggregation. Values:
	// Aggregation
	Aggregation *string `json:"aggregation,omitempty" tf:"aggregation,omitempty"`

	// Color settings.
	// Color scheme settings
	ColorSchemeSettings []ColorSchemeSettingsInitParameters `json:"colorSchemeSettings,omitempty" tf:"color_scheme_settings,omitempty"`

	// Heatmap settings.
	// Heatmap settings
	HeatmapSettings []HeatmapSettingsInitParameters `json:"heatmapSettings,omitempty" tf:"heatmap_settings,omitempty"`

	// Interpolate values. Values:
	// Interpolate
	Interpolate *string `json:"interpolate,omitempty" tf:"interpolate,omitempty"`

	// Normalize values.
	// Normalize
	Normalize *bool `json:"normalize,omitempty" tf:"normalize,omitempty"`

	// Show chart labels.
	// Show chart labels
	ShowLabels *bool `json:"showLabels,omitempty" tf:"show_labels,omitempty"`

	// Title or empty.
	// Inside chart title
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Type. Values:
	// Visualization type
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Y axis settings.
	// Y axis settings
	YaxisSettings []YaxisSettingsInitParameters `json:"yaxisSettings,omitempty" tf:"yaxis_settings,omitempty"`
}

type VisualizationSettingsObservation struct {

	// Aggregation. Values:
	// Aggregation
	Aggregation *string `json:"aggregation,omitempty" tf:"aggregation,omitempty"`

	// Color settings.
	// Color scheme settings
	ColorSchemeSettings []ColorSchemeSettingsObservation `json:"colorSchemeSettings,omitempty" tf:"color_scheme_settings,omitempty"`

	// Heatmap settings.
	// Heatmap settings
	HeatmapSettings []HeatmapSettingsObservation `json:"heatmapSettings,omitempty" tf:"heatmap_settings,omitempty"`

	// Interpolate values. Values:
	// Interpolate
	Interpolate *string `json:"interpolate,omitempty" tf:"interpolate,omitempty"`

	// Normalize values.
	// Normalize
	Normalize *bool `json:"normalize,omitempty" tf:"normalize,omitempty"`

	// Show chart labels.
	// Show chart labels
	ShowLabels *bool `json:"showLabels,omitempty" tf:"show_labels,omitempty"`

	// Title or empty.
	// Inside chart title
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Type. Values:
	// Visualization type
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Y axis settings.
	// Y axis settings
	YaxisSettings []YaxisSettingsObservation `json:"yaxisSettings,omitempty" tf:"yaxis_settings,omitempty"`
}

type VisualizationSettingsParameters struct {

	// Aggregation. Values:
	// Aggregation
	// +kubebuilder:validation:Optional
	Aggregation *string `json:"aggregation,omitempty" tf:"aggregation,omitempty"`

	// Color settings.
	// Color scheme settings
	// +kubebuilder:validation:Optional
	ColorSchemeSettings []ColorSchemeSettingsParameters `json:"colorSchemeSettings,omitempty" tf:"color_scheme_settings,omitempty"`

	// Heatmap settings.
	// Heatmap settings
	// +kubebuilder:validation:Optional
	HeatmapSettings []HeatmapSettingsParameters `json:"heatmapSettings,omitempty" tf:"heatmap_settings,omitempty"`

	// Interpolate values. Values:
	// Interpolate
	// +kubebuilder:validation:Optional
	Interpolate *string `json:"interpolate,omitempty" tf:"interpolate,omitempty"`

	// Normalize values.
	// Normalize
	// +kubebuilder:validation:Optional
	Normalize *bool `json:"normalize,omitempty" tf:"normalize,omitempty"`

	// Show chart labels.
	// Show chart labels
	// +kubebuilder:validation:Optional
	ShowLabels *bool `json:"showLabels,omitempty" tf:"show_labels,omitempty"`

	// Title or empty.
	// Inside chart title
	// +kubebuilder:validation:Optional
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// Type. Values:
	// Visualization type
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Y axis settings.
	// Y axis settings
	// +kubebuilder:validation:Optional
	YaxisSettings []YaxisSettingsParameters `json:"yaxisSettings,omitempty" tf:"yaxis_settings,omitempty"`
}

type WidgetsInitParameters struct {

	// Chart widget settings. Oneof: text, title or chart.
	// Chart widget
	Chart []ChartInitParameters `json:"chart,omitempty" tf:"chart,omitempty"`

	// Widget position.
	// Required. Widget layout position
	Position []PositionInitParameters `json:"position,omitempty" tf:"position,omitempty"`

	// Text widget settings. Oneof: text, title or chart.
	// Text widget
	Text []WidgetsTextInitParameters `json:"text,omitempty" tf:"text,omitempty"`

	// Title widget settings. Oneof: text, title or chart.
	// Title widget
	Title []TitleInitParameters `json:"title,omitempty" tf:"title,omitempty"`
}

type WidgetsObservation struct {

	// Chart widget settings. Oneof: text, title or chart.
	// Chart widget
	Chart []ChartObservation `json:"chart,omitempty" tf:"chart,omitempty"`

	// Widget position.
	// Required. Widget layout position
	Position []PositionObservation `json:"position,omitempty" tf:"position,omitempty"`

	// Text widget settings. Oneof: text, title or chart.
	// Text widget
	Text []WidgetsTextObservation `json:"text,omitempty" tf:"text,omitempty"`

	// Title widget settings. Oneof: text, title or chart.
	// Title widget
	Title []TitleObservation `json:"title,omitempty" tf:"title,omitempty"`
}

type WidgetsParameters struct {

	// Chart widget settings. Oneof: text, title or chart.
	// Chart widget
	// +kubebuilder:validation:Optional
	Chart []ChartParameters `json:"chart,omitempty" tf:"chart,omitempty"`

	// Widget position.
	// Required. Widget layout position
	// +kubebuilder:validation:Optional
	Position []PositionParameters `json:"position,omitempty" tf:"position,omitempty"`

	// Text widget settings. Oneof: text, title or chart.
	// Text widget
	// +kubebuilder:validation:Optional
	Text []WidgetsTextParameters `json:"text,omitempty" tf:"text,omitempty"`

	// Title widget settings. Oneof: text, title or chart.
	// Title widget
	// +kubebuilder:validation:Optional
	Title []TitleParameters `json:"title,omitempty" tf:"title,omitempty"`
}

type WidgetsTextInitParameters struct {

	// Text widget settings. Oneof: text, title or chart.
	// Text
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type WidgetsTextObservation struct {

	// Text widget settings. Oneof: text, title or chart.
	// Text
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type WidgetsTextParameters struct {

	// Text widget settings. Oneof: text, title or chart.
	// Text
	// +kubebuilder:validation:Optional
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type YaxisSettingsInitParameters struct {

	// Left yaxis config.
	// Left Y axis settings
	Left []LeftInitParameters `json:"left,omitempty" tf:"left,omitempty"`

	// Right yaxis config.
	// Right Y axis settings
	Right []RightInitParameters `json:"right,omitempty" tf:"right,omitempty"`
}

type YaxisSettingsObservation struct {

	// Left yaxis config.
	// Left Y axis settings
	Left []LeftObservation `json:"left,omitempty" tf:"left,omitempty"`

	// Right yaxis config.
	// Right Y axis settings
	Right []RightObservation `json:"right,omitempty" tf:"right,omitempty"`
}

type YaxisSettingsParameters struct {

	// Left yaxis config.
	// Left Y axis settings
	// +kubebuilder:validation:Optional
	Left []LeftParameters `json:"left,omitempty" tf:"left,omitempty"`

	// Right yaxis config.
	// Right Y axis settings
	// +kubebuilder:validation:Optional
	Right []RightParameters `json:"right,omitempty" tf:"right,omitempty"`
}

// DashboardSpec defines the desired state of Dashboard
type DashboardSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DashboardParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DashboardInitParameters `json:"initProvider,omitempty"`
}

// DashboardStatus defines the observed state of Dashboard.
type DashboardStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DashboardObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Dashboard is the Schema for the Dashboards API. Allows management of a Yandex.Cloud Monitoring Dashboard.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,yandex-cloud}
type Dashboard struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   DashboardSpec   `json:"spec"`
	Status DashboardStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DashboardList contains a list of Dashboards
type DashboardList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Dashboard `json:"items"`
}

// Repository type metadata.
var (
	Dashboard_Kind             = "Dashboard"
	Dashboard_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Dashboard_Kind}.String()
	Dashboard_KindAPIVersion   = Dashboard_Kind + "." + CRDGroupVersion.String()
	Dashboard_GroupVersionKind = CRDGroupVersion.WithKind(Dashboard_Kind)
)

func init() {
	SchemeBuilder.Register(&Dashboard{}, &DashboardList{})
}
