// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SecretVersionHashedInitParameters struct {

	// The Yandex Cloud Lockbox secret version description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Key1 *string `json:"key1,omitempty" tf:"key_1,omitempty"`

	Key10 *string `json:"key10,omitempty" tf:"key_10,omitempty"`

	Key2 *string `json:"key2,omitempty" tf:"key_2,omitempty"`

	Key3 *string `json:"key3,omitempty" tf:"key_3,omitempty"`

	Key4 *string `json:"key4,omitempty" tf:"key_4,omitempty"`

	Key5 *string `json:"key5,omitempty" tf:"key_5,omitempty"`

	Key6 *string `json:"key6,omitempty" tf:"key_6,omitempty"`

	Key7 *string `json:"key7,omitempty" tf:"key_7,omitempty"`

	Key8 *string `json:"key8,omitempty" tf:"key_8,omitempty"`

	Key9 *string `json:"key9,omitempty" tf:"key_9,omitempty"`

	// The Yandex Cloud Lockbox secret ID where to add the version.
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/lockbox/v1alpha1.Secret
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	SecretID *string `json:"secretId,omitempty" tf:"secret_id,omitempty"`

	// Reference to a Secret in lockbox to populate secretId.
	// +kubebuilder:validation:Optional
	SecretIDRef *v1.Reference `json:"secretIdRef,omitempty" tf:"-"`

	// Selector for a Secret in lockbox to populate secretId.
	// +kubebuilder:validation:Optional
	SecretIDSelector *v1.Selector `json:"secretIdSelector,omitempty" tf:"-"`

	TextValue10SecretRef *v1.SecretKeySelector `json:"textValue10SecretRef,omitempty" tf:"-"`

	TextValue1SecretRef *v1.SecretKeySelector `json:"textValue1SecretRef,omitempty" tf:"-"`

	TextValue2SecretRef *v1.SecretKeySelector `json:"textValue2SecretRef,omitempty" tf:"-"`

	TextValue3SecretRef *v1.SecretKeySelector `json:"textValue3SecretRef,omitempty" tf:"-"`

	TextValue4SecretRef *v1.SecretKeySelector `json:"textValue4SecretRef,omitempty" tf:"-"`

	TextValue5SecretRef *v1.SecretKeySelector `json:"textValue5SecretRef,omitempty" tf:"-"`

	TextValue6SecretRef *v1.SecretKeySelector `json:"textValue6SecretRef,omitempty" tf:"-"`

	TextValue7SecretRef *v1.SecretKeySelector `json:"textValue7SecretRef,omitempty" tf:"-"`

	TextValue8SecretRef *v1.SecretKeySelector `json:"textValue8SecretRef,omitempty" tf:"-"`

	TextValue9SecretRef *v1.SecretKeySelector `json:"textValue9SecretRef,omitempty" tf:"-"`
}

type SecretVersionHashedObservation struct {

	// The Yandex Cloud Lockbox secret version description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Key1 *string `json:"key1,omitempty" tf:"key_1,omitempty"`

	Key10 *string `json:"key10,omitempty" tf:"key_10,omitempty"`

	Key2 *string `json:"key2,omitempty" tf:"key_2,omitempty"`

	Key3 *string `json:"key3,omitempty" tf:"key_3,omitempty"`

	Key4 *string `json:"key4,omitempty" tf:"key_4,omitempty"`

	Key5 *string `json:"key5,omitempty" tf:"key_5,omitempty"`

	Key6 *string `json:"key6,omitempty" tf:"key_6,omitempty"`

	Key7 *string `json:"key7,omitempty" tf:"key_7,omitempty"`

	Key8 *string `json:"key8,omitempty" tf:"key_8,omitempty"`

	Key9 *string `json:"key9,omitempty" tf:"key_9,omitempty"`

	// The Yandex Cloud Lockbox secret ID where to add the version.
	SecretID *string `json:"secretId,omitempty" tf:"secret_id,omitempty"`
}

type SecretVersionHashedParameters struct {

	// The Yandex Cloud Lockbox secret version description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Key1 *string `json:"key1,omitempty" tf:"key_1,omitempty"`

	// +kubebuilder:validation:Optional
	Key10 *string `json:"key10,omitempty" tf:"key_10,omitempty"`

	// +kubebuilder:validation:Optional
	Key2 *string `json:"key2,omitempty" tf:"key_2,omitempty"`

	// +kubebuilder:validation:Optional
	Key3 *string `json:"key3,omitempty" tf:"key_3,omitempty"`

	// +kubebuilder:validation:Optional
	Key4 *string `json:"key4,omitempty" tf:"key_4,omitempty"`

	// +kubebuilder:validation:Optional
	Key5 *string `json:"key5,omitempty" tf:"key_5,omitempty"`

	// +kubebuilder:validation:Optional
	Key6 *string `json:"key6,omitempty" tf:"key_6,omitempty"`

	// +kubebuilder:validation:Optional
	Key7 *string `json:"key7,omitempty" tf:"key_7,omitempty"`

	// +kubebuilder:validation:Optional
	Key8 *string `json:"key8,omitempty" tf:"key_8,omitempty"`

	// +kubebuilder:validation:Optional
	Key9 *string `json:"key9,omitempty" tf:"key_9,omitempty"`

	// The Yandex Cloud Lockbox secret ID where to add the version.
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/lockbox/v1alpha1.Secret
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	SecretID *string `json:"secretId,omitempty" tf:"secret_id,omitempty"`

	// Reference to a Secret in lockbox to populate secretId.
	// +kubebuilder:validation:Optional
	SecretIDRef *v1.Reference `json:"secretIdRef,omitempty" tf:"-"`

	// Selector for a Secret in lockbox to populate secretId.
	// +kubebuilder:validation:Optional
	SecretIDSelector *v1.Selector `json:"secretIdSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	TextValue10SecretRef *v1.SecretKeySelector `json:"textValue10SecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	TextValue1SecretRef *v1.SecretKeySelector `json:"textValue1SecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	TextValue2SecretRef *v1.SecretKeySelector `json:"textValue2SecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	TextValue3SecretRef *v1.SecretKeySelector `json:"textValue3SecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	TextValue4SecretRef *v1.SecretKeySelector `json:"textValue4SecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	TextValue5SecretRef *v1.SecretKeySelector `json:"textValue5SecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	TextValue6SecretRef *v1.SecretKeySelector `json:"textValue6SecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	TextValue7SecretRef *v1.SecretKeySelector `json:"textValue7SecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	TextValue8SecretRef *v1.SecretKeySelector `json:"textValue8SecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	TextValue9SecretRef *v1.SecretKeySelector `json:"textValue9SecretRef,omitempty" tf:"-"`
}

// SecretVersionHashedSpec defines the desired state of SecretVersionHashed
type SecretVersionHashedSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SecretVersionHashedParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SecretVersionHashedInitParameters `json:"initProvider,omitempty"`
}

// SecretVersionHashedStatus defines the observed state of SecretVersionHashed.
type SecretVersionHashedStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SecretVersionHashedObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SecretVersionHashed is the Schema for the SecretVersionHasheds API. Manages Yandex Cloud Lockbox secret version (with values hashed in state).
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,yandex-cloud}
type SecretVersionHashed struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SecretVersionHashedSpec   `json:"spec"`
	Status            SecretVersionHashedStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SecretVersionHashedList contains a list of SecretVersionHasheds
type SecretVersionHashedList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SecretVersionHashed `json:"items"`
}

// Repository type metadata.
var (
	SecretVersionHashed_Kind             = "SecretVersionHashed"
	SecretVersionHashed_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SecretVersionHashed_Kind}.String()
	SecretVersionHashed_KindAPIVersion   = SecretVersionHashed_Kind + "." + CRDGroupVersion.String()
	SecretVersionHashed_GroupVersionKind = CRDGroupVersion.WithKind(SecretVersionHashed_Kind)
)

func init() {
	SchemeBuilder.Register(&SecretVersionHashed{}, &SecretVersionHashedList{})
}
