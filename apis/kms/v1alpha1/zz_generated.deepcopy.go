//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricEncryptionKey) DeepCopyInto(out *AsymmetricEncryptionKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricEncryptionKey.
func (in *AsymmetricEncryptionKey) DeepCopy() *AsymmetricEncryptionKey {
	if in == nil {
		return nil
	}
	out := new(AsymmetricEncryptionKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AsymmetricEncryptionKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricEncryptionKeyIAMBinding) DeepCopyInto(out *AsymmetricEncryptionKeyIAMBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricEncryptionKeyIAMBinding.
func (in *AsymmetricEncryptionKeyIAMBinding) DeepCopy() *AsymmetricEncryptionKeyIAMBinding {
	if in == nil {
		return nil
	}
	out := new(AsymmetricEncryptionKeyIAMBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AsymmetricEncryptionKeyIAMBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricEncryptionKeyIAMBindingInitParameters) DeepCopyInto(out *AsymmetricEncryptionKeyIAMBindingInitParameters) {
	*out = *in
	if in.AsymmetricEncryptionKeyID != nil {
		in, out := &in.AsymmetricEncryptionKeyID, &out.AsymmetricEncryptionKeyID
		*out = new(string)
		**out = **in
	}
	if in.AsymmetricEncryptionKeyIDRef != nil {
		in, out := &in.AsymmetricEncryptionKeyIDRef, &out.AsymmetricEncryptionKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AsymmetricEncryptionKeyIDSelector != nil {
		in, out := &in.AsymmetricEncryptionKeyIDSelector, &out.AsymmetricEncryptionKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SleepAfter != nil {
		in, out := &in.SleepAfter, &out.SleepAfter
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricEncryptionKeyIAMBindingInitParameters.
func (in *AsymmetricEncryptionKeyIAMBindingInitParameters) DeepCopy() *AsymmetricEncryptionKeyIAMBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(AsymmetricEncryptionKeyIAMBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricEncryptionKeyIAMBindingList) DeepCopyInto(out *AsymmetricEncryptionKeyIAMBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AsymmetricEncryptionKeyIAMBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricEncryptionKeyIAMBindingList.
func (in *AsymmetricEncryptionKeyIAMBindingList) DeepCopy() *AsymmetricEncryptionKeyIAMBindingList {
	if in == nil {
		return nil
	}
	out := new(AsymmetricEncryptionKeyIAMBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AsymmetricEncryptionKeyIAMBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricEncryptionKeyIAMBindingObservation) DeepCopyInto(out *AsymmetricEncryptionKeyIAMBindingObservation) {
	*out = *in
	if in.AsymmetricEncryptionKeyID != nil {
		in, out := &in.AsymmetricEncryptionKeyID, &out.AsymmetricEncryptionKeyID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SleepAfter != nil {
		in, out := &in.SleepAfter, &out.SleepAfter
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricEncryptionKeyIAMBindingObservation.
func (in *AsymmetricEncryptionKeyIAMBindingObservation) DeepCopy() *AsymmetricEncryptionKeyIAMBindingObservation {
	if in == nil {
		return nil
	}
	out := new(AsymmetricEncryptionKeyIAMBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricEncryptionKeyIAMBindingParameters) DeepCopyInto(out *AsymmetricEncryptionKeyIAMBindingParameters) {
	*out = *in
	if in.AsymmetricEncryptionKeyID != nil {
		in, out := &in.AsymmetricEncryptionKeyID, &out.AsymmetricEncryptionKeyID
		*out = new(string)
		**out = **in
	}
	if in.AsymmetricEncryptionKeyIDRef != nil {
		in, out := &in.AsymmetricEncryptionKeyIDRef, &out.AsymmetricEncryptionKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AsymmetricEncryptionKeyIDSelector != nil {
		in, out := &in.AsymmetricEncryptionKeyIDSelector, &out.AsymmetricEncryptionKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SleepAfter != nil {
		in, out := &in.SleepAfter, &out.SleepAfter
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricEncryptionKeyIAMBindingParameters.
func (in *AsymmetricEncryptionKeyIAMBindingParameters) DeepCopy() *AsymmetricEncryptionKeyIAMBindingParameters {
	if in == nil {
		return nil
	}
	out := new(AsymmetricEncryptionKeyIAMBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricEncryptionKeyIAMBindingSpec) DeepCopyInto(out *AsymmetricEncryptionKeyIAMBindingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricEncryptionKeyIAMBindingSpec.
func (in *AsymmetricEncryptionKeyIAMBindingSpec) DeepCopy() *AsymmetricEncryptionKeyIAMBindingSpec {
	if in == nil {
		return nil
	}
	out := new(AsymmetricEncryptionKeyIAMBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricEncryptionKeyIAMBindingStatus) DeepCopyInto(out *AsymmetricEncryptionKeyIAMBindingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricEncryptionKeyIAMBindingStatus.
func (in *AsymmetricEncryptionKeyIAMBindingStatus) DeepCopy() *AsymmetricEncryptionKeyIAMBindingStatus {
	if in == nil {
		return nil
	}
	out := new(AsymmetricEncryptionKeyIAMBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricEncryptionKeyInitParameters) DeepCopyInto(out *AsymmetricEncryptionKeyInitParameters) {
	*out = *in
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.FolderIDRef != nil {
		in, out := &in.FolderIDRef, &out.FolderIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderIDSelector != nil {
		in, out := &in.FolderIDSelector, &out.FolderIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricEncryptionKeyInitParameters.
func (in *AsymmetricEncryptionKeyInitParameters) DeepCopy() *AsymmetricEncryptionKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AsymmetricEncryptionKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricEncryptionKeyList) DeepCopyInto(out *AsymmetricEncryptionKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AsymmetricEncryptionKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricEncryptionKeyList.
func (in *AsymmetricEncryptionKeyList) DeepCopy() *AsymmetricEncryptionKeyList {
	if in == nil {
		return nil
	}
	out := new(AsymmetricEncryptionKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AsymmetricEncryptionKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricEncryptionKeyObservation) DeepCopyInto(out *AsymmetricEncryptionKeyObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricEncryptionKeyObservation.
func (in *AsymmetricEncryptionKeyObservation) DeepCopy() *AsymmetricEncryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(AsymmetricEncryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricEncryptionKeyParameters) DeepCopyInto(out *AsymmetricEncryptionKeyParameters) {
	*out = *in
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptionAlgorithm != nil {
		in, out := &in.EncryptionAlgorithm, &out.EncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.FolderIDRef != nil {
		in, out := &in.FolderIDRef, &out.FolderIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderIDSelector != nil {
		in, out := &in.FolderIDSelector, &out.FolderIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricEncryptionKeyParameters.
func (in *AsymmetricEncryptionKeyParameters) DeepCopy() *AsymmetricEncryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(AsymmetricEncryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricEncryptionKeySpec) DeepCopyInto(out *AsymmetricEncryptionKeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricEncryptionKeySpec.
func (in *AsymmetricEncryptionKeySpec) DeepCopy() *AsymmetricEncryptionKeySpec {
	if in == nil {
		return nil
	}
	out := new(AsymmetricEncryptionKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricEncryptionKeyStatus) DeepCopyInto(out *AsymmetricEncryptionKeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricEncryptionKeyStatus.
func (in *AsymmetricEncryptionKeyStatus) DeepCopy() *AsymmetricEncryptionKeyStatus {
	if in == nil {
		return nil
	}
	out := new(AsymmetricEncryptionKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricSignatureKey) DeepCopyInto(out *AsymmetricSignatureKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricSignatureKey.
func (in *AsymmetricSignatureKey) DeepCopy() *AsymmetricSignatureKey {
	if in == nil {
		return nil
	}
	out := new(AsymmetricSignatureKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AsymmetricSignatureKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricSignatureKeyIAMBinding) DeepCopyInto(out *AsymmetricSignatureKeyIAMBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricSignatureKeyIAMBinding.
func (in *AsymmetricSignatureKeyIAMBinding) DeepCopy() *AsymmetricSignatureKeyIAMBinding {
	if in == nil {
		return nil
	}
	out := new(AsymmetricSignatureKeyIAMBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AsymmetricSignatureKeyIAMBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricSignatureKeyIAMBindingInitParameters) DeepCopyInto(out *AsymmetricSignatureKeyIAMBindingInitParameters) {
	*out = *in
	if in.AsymmetricSignatureKeyID != nil {
		in, out := &in.AsymmetricSignatureKeyID, &out.AsymmetricSignatureKeyID
		*out = new(string)
		**out = **in
	}
	if in.AsymmetricSignatureKeyIDRef != nil {
		in, out := &in.AsymmetricSignatureKeyIDRef, &out.AsymmetricSignatureKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AsymmetricSignatureKeyIDSelector != nil {
		in, out := &in.AsymmetricSignatureKeyIDSelector, &out.AsymmetricSignatureKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SleepAfter != nil {
		in, out := &in.SleepAfter, &out.SleepAfter
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricSignatureKeyIAMBindingInitParameters.
func (in *AsymmetricSignatureKeyIAMBindingInitParameters) DeepCopy() *AsymmetricSignatureKeyIAMBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(AsymmetricSignatureKeyIAMBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricSignatureKeyIAMBindingList) DeepCopyInto(out *AsymmetricSignatureKeyIAMBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AsymmetricSignatureKeyIAMBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricSignatureKeyIAMBindingList.
func (in *AsymmetricSignatureKeyIAMBindingList) DeepCopy() *AsymmetricSignatureKeyIAMBindingList {
	if in == nil {
		return nil
	}
	out := new(AsymmetricSignatureKeyIAMBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AsymmetricSignatureKeyIAMBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricSignatureKeyIAMBindingObservation) DeepCopyInto(out *AsymmetricSignatureKeyIAMBindingObservation) {
	*out = *in
	if in.AsymmetricSignatureKeyID != nil {
		in, out := &in.AsymmetricSignatureKeyID, &out.AsymmetricSignatureKeyID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SleepAfter != nil {
		in, out := &in.SleepAfter, &out.SleepAfter
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricSignatureKeyIAMBindingObservation.
func (in *AsymmetricSignatureKeyIAMBindingObservation) DeepCopy() *AsymmetricSignatureKeyIAMBindingObservation {
	if in == nil {
		return nil
	}
	out := new(AsymmetricSignatureKeyIAMBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricSignatureKeyIAMBindingParameters) DeepCopyInto(out *AsymmetricSignatureKeyIAMBindingParameters) {
	*out = *in
	if in.AsymmetricSignatureKeyID != nil {
		in, out := &in.AsymmetricSignatureKeyID, &out.AsymmetricSignatureKeyID
		*out = new(string)
		**out = **in
	}
	if in.AsymmetricSignatureKeyIDRef != nil {
		in, out := &in.AsymmetricSignatureKeyIDRef, &out.AsymmetricSignatureKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AsymmetricSignatureKeyIDSelector != nil {
		in, out := &in.AsymmetricSignatureKeyIDSelector, &out.AsymmetricSignatureKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SleepAfter != nil {
		in, out := &in.SleepAfter, &out.SleepAfter
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricSignatureKeyIAMBindingParameters.
func (in *AsymmetricSignatureKeyIAMBindingParameters) DeepCopy() *AsymmetricSignatureKeyIAMBindingParameters {
	if in == nil {
		return nil
	}
	out := new(AsymmetricSignatureKeyIAMBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricSignatureKeyIAMBindingSpec) DeepCopyInto(out *AsymmetricSignatureKeyIAMBindingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricSignatureKeyIAMBindingSpec.
func (in *AsymmetricSignatureKeyIAMBindingSpec) DeepCopy() *AsymmetricSignatureKeyIAMBindingSpec {
	if in == nil {
		return nil
	}
	out := new(AsymmetricSignatureKeyIAMBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricSignatureKeyIAMBindingStatus) DeepCopyInto(out *AsymmetricSignatureKeyIAMBindingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricSignatureKeyIAMBindingStatus.
func (in *AsymmetricSignatureKeyIAMBindingStatus) DeepCopy() *AsymmetricSignatureKeyIAMBindingStatus {
	if in == nil {
		return nil
	}
	out := new(AsymmetricSignatureKeyIAMBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricSignatureKeyInitParameters) DeepCopyInto(out *AsymmetricSignatureKeyInitParameters) {
	*out = *in
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.FolderIDRef != nil {
		in, out := &in.FolderIDRef, &out.FolderIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderIDSelector != nil {
		in, out := &in.FolderIDSelector, &out.FolderIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricSignatureKeyInitParameters.
func (in *AsymmetricSignatureKeyInitParameters) DeepCopy() *AsymmetricSignatureKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AsymmetricSignatureKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricSignatureKeyList) DeepCopyInto(out *AsymmetricSignatureKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AsymmetricSignatureKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricSignatureKeyList.
func (in *AsymmetricSignatureKeyList) DeepCopy() *AsymmetricSignatureKeyList {
	if in == nil {
		return nil
	}
	out := new(AsymmetricSignatureKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AsymmetricSignatureKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricSignatureKeyObservation) DeepCopyInto(out *AsymmetricSignatureKeyObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricSignatureKeyObservation.
func (in *AsymmetricSignatureKeyObservation) DeepCopy() *AsymmetricSignatureKeyObservation {
	if in == nil {
		return nil
	}
	out := new(AsymmetricSignatureKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricSignatureKeyParameters) DeepCopyInto(out *AsymmetricSignatureKeyParameters) {
	*out = *in
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.FolderIDRef != nil {
		in, out := &in.FolderIDRef, &out.FolderIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderIDSelector != nil {
		in, out := &in.FolderIDSelector, &out.FolderIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricSignatureKeyParameters.
func (in *AsymmetricSignatureKeyParameters) DeepCopy() *AsymmetricSignatureKeyParameters {
	if in == nil {
		return nil
	}
	out := new(AsymmetricSignatureKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricSignatureKeySpec) DeepCopyInto(out *AsymmetricSignatureKeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricSignatureKeySpec.
func (in *AsymmetricSignatureKeySpec) DeepCopy() *AsymmetricSignatureKeySpec {
	if in == nil {
		return nil
	}
	out := new(AsymmetricSignatureKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AsymmetricSignatureKeyStatus) DeepCopyInto(out *AsymmetricSignatureKeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AsymmetricSignatureKeyStatus.
func (in *AsymmetricSignatureKeyStatus) DeepCopy() *AsymmetricSignatureKeyStatus {
	if in == nil {
		return nil
	}
	out := new(AsymmetricSignatureKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretCiphertext) DeepCopyInto(out *SecretCiphertext) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretCiphertext.
func (in *SecretCiphertext) DeepCopy() *SecretCiphertext {
	if in == nil {
		return nil
	}
	out := new(SecretCiphertext)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretCiphertext) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretCiphertextInitParameters) DeepCopyInto(out *SecretCiphertextInitParameters) {
	*out = *in
	if in.AadContext != nil {
		in, out := &in.AadContext, &out.AadContext
		*out = new(string)
		**out = **in
	}
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyIDRef != nil {
		in, out := &in.KeyIDRef, &out.KeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyIDSelector != nil {
		in, out := &in.KeyIDSelector, &out.KeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretCiphertextInitParameters.
func (in *SecretCiphertextInitParameters) DeepCopy() *SecretCiphertextInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretCiphertextInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretCiphertextList) DeepCopyInto(out *SecretCiphertextList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecretCiphertext, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretCiphertextList.
func (in *SecretCiphertextList) DeepCopy() *SecretCiphertextList {
	if in == nil {
		return nil
	}
	out := new(SecretCiphertextList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretCiphertextList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretCiphertextObservation) DeepCopyInto(out *SecretCiphertextObservation) {
	*out = *in
	if in.AadContext != nil {
		in, out := &in.AadContext, &out.AadContext
		*out = new(string)
		**out = **in
	}
	if in.Ciphertext != nil {
		in, out := &in.Ciphertext, &out.Ciphertext
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretCiphertextObservation.
func (in *SecretCiphertextObservation) DeepCopy() *SecretCiphertextObservation {
	if in == nil {
		return nil
	}
	out := new(SecretCiphertextObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretCiphertextParameters) DeepCopyInto(out *SecretCiphertextParameters) {
	*out = *in
	if in.AadContext != nil {
		in, out := &in.AadContext, &out.AadContext
		*out = new(string)
		**out = **in
	}
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyIDRef != nil {
		in, out := &in.KeyIDRef, &out.KeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyIDSelector != nil {
		in, out := &in.KeyIDSelector, &out.KeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	out.PlaintextSecretRef = in.PlaintextSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretCiphertextParameters.
func (in *SecretCiphertextParameters) DeepCopy() *SecretCiphertextParameters {
	if in == nil {
		return nil
	}
	out := new(SecretCiphertextParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretCiphertextSpec) DeepCopyInto(out *SecretCiphertextSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretCiphertextSpec.
func (in *SecretCiphertextSpec) DeepCopy() *SecretCiphertextSpec {
	if in == nil {
		return nil
	}
	out := new(SecretCiphertextSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretCiphertextStatus) DeepCopyInto(out *SecretCiphertextStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretCiphertextStatus.
func (in *SecretCiphertextStatus) DeepCopy() *SecretCiphertextStatus {
	if in == nil {
		return nil
	}
	out := new(SecretCiphertextStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SymmetricKey) DeepCopyInto(out *SymmetricKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SymmetricKey.
func (in *SymmetricKey) DeepCopy() *SymmetricKey {
	if in == nil {
		return nil
	}
	out := new(SymmetricKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SymmetricKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SymmetricKeyIAMBinding) DeepCopyInto(out *SymmetricKeyIAMBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SymmetricKeyIAMBinding.
func (in *SymmetricKeyIAMBinding) DeepCopy() *SymmetricKeyIAMBinding {
	if in == nil {
		return nil
	}
	out := new(SymmetricKeyIAMBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SymmetricKeyIAMBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SymmetricKeyIAMBindingInitParameters) DeepCopyInto(out *SymmetricKeyIAMBindingInitParameters) {
	*out = *in
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SleepAfter != nil {
		in, out := &in.SleepAfter, &out.SleepAfter
		*out = new(float64)
		**out = **in
	}
	if in.SymmetricKeyID != nil {
		in, out := &in.SymmetricKeyID, &out.SymmetricKeyID
		*out = new(string)
		**out = **in
	}
	if in.SymmetricKeyIDRef != nil {
		in, out := &in.SymmetricKeyIDRef, &out.SymmetricKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SymmetricKeyIDSelector != nil {
		in, out := &in.SymmetricKeyIDSelector, &out.SymmetricKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SymmetricKeyIAMBindingInitParameters.
func (in *SymmetricKeyIAMBindingInitParameters) DeepCopy() *SymmetricKeyIAMBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(SymmetricKeyIAMBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SymmetricKeyIAMBindingList) DeepCopyInto(out *SymmetricKeyIAMBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SymmetricKeyIAMBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SymmetricKeyIAMBindingList.
func (in *SymmetricKeyIAMBindingList) DeepCopy() *SymmetricKeyIAMBindingList {
	if in == nil {
		return nil
	}
	out := new(SymmetricKeyIAMBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SymmetricKeyIAMBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SymmetricKeyIAMBindingObservation) DeepCopyInto(out *SymmetricKeyIAMBindingObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SleepAfter != nil {
		in, out := &in.SleepAfter, &out.SleepAfter
		*out = new(float64)
		**out = **in
	}
	if in.SymmetricKeyID != nil {
		in, out := &in.SymmetricKeyID, &out.SymmetricKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SymmetricKeyIAMBindingObservation.
func (in *SymmetricKeyIAMBindingObservation) DeepCopy() *SymmetricKeyIAMBindingObservation {
	if in == nil {
		return nil
	}
	out := new(SymmetricKeyIAMBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SymmetricKeyIAMBindingParameters) DeepCopyInto(out *SymmetricKeyIAMBindingParameters) {
	*out = *in
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccountSelector != nil {
		in, out := &in.ServiceAccountSelector, &out.ServiceAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SleepAfter != nil {
		in, out := &in.SleepAfter, &out.SleepAfter
		*out = new(float64)
		**out = **in
	}
	if in.SymmetricKeyID != nil {
		in, out := &in.SymmetricKeyID, &out.SymmetricKeyID
		*out = new(string)
		**out = **in
	}
	if in.SymmetricKeyIDRef != nil {
		in, out := &in.SymmetricKeyIDRef, &out.SymmetricKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SymmetricKeyIDSelector != nil {
		in, out := &in.SymmetricKeyIDSelector, &out.SymmetricKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SymmetricKeyIAMBindingParameters.
func (in *SymmetricKeyIAMBindingParameters) DeepCopy() *SymmetricKeyIAMBindingParameters {
	if in == nil {
		return nil
	}
	out := new(SymmetricKeyIAMBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SymmetricKeyIAMBindingSpec) DeepCopyInto(out *SymmetricKeyIAMBindingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SymmetricKeyIAMBindingSpec.
func (in *SymmetricKeyIAMBindingSpec) DeepCopy() *SymmetricKeyIAMBindingSpec {
	if in == nil {
		return nil
	}
	out := new(SymmetricKeyIAMBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SymmetricKeyIAMBindingStatus) DeepCopyInto(out *SymmetricKeyIAMBindingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SymmetricKeyIAMBindingStatus.
func (in *SymmetricKeyIAMBindingStatus) DeepCopy() *SymmetricKeyIAMBindingStatus {
	if in == nil {
		return nil
	}
	out := new(SymmetricKeyIAMBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SymmetricKeyInitParameters) DeepCopyInto(out *SymmetricKeyInitParameters) {
	*out = *in
	if in.DefaultAlgorithm != nil {
		in, out := &in.DefaultAlgorithm, &out.DefaultAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.FolderIDRef != nil {
		in, out := &in.FolderIDRef, &out.FolderIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderIDSelector != nil {
		in, out := &in.FolderIDSelector, &out.FolderIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RotationPeriod != nil {
		in, out := &in.RotationPeriod, &out.RotationPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SymmetricKeyInitParameters.
func (in *SymmetricKeyInitParameters) DeepCopy() *SymmetricKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SymmetricKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SymmetricKeyList) DeepCopyInto(out *SymmetricKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SymmetricKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SymmetricKeyList.
func (in *SymmetricKeyList) DeepCopy() *SymmetricKeyList {
	if in == nil {
		return nil
	}
	out := new(SymmetricKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SymmetricKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SymmetricKeyObservation) DeepCopyInto(out *SymmetricKeyObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DefaultAlgorithm != nil {
		in, out := &in.DefaultAlgorithm, &out.DefaultAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RotatedAt != nil {
		in, out := &in.RotatedAt, &out.RotatedAt
		*out = new(string)
		**out = **in
	}
	if in.RotationPeriod != nil {
		in, out := &in.RotationPeriod, &out.RotationPeriod
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SymmetricKeyObservation.
func (in *SymmetricKeyObservation) DeepCopy() *SymmetricKeyObservation {
	if in == nil {
		return nil
	}
	out := new(SymmetricKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SymmetricKeyParameters) DeepCopyInto(out *SymmetricKeyParameters) {
	*out = *in
	if in.DefaultAlgorithm != nil {
		in, out := &in.DefaultAlgorithm, &out.DefaultAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.FolderIDRef != nil {
		in, out := &in.FolderIDRef, &out.FolderIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderIDSelector != nil {
		in, out := &in.FolderIDSelector, &out.FolderIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RotationPeriod != nil {
		in, out := &in.RotationPeriod, &out.RotationPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SymmetricKeyParameters.
func (in *SymmetricKeyParameters) DeepCopy() *SymmetricKeyParameters {
	if in == nil {
		return nil
	}
	out := new(SymmetricKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SymmetricKeySpec) DeepCopyInto(out *SymmetricKeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SymmetricKeySpec.
func (in *SymmetricKeySpec) DeepCopy() *SymmetricKeySpec {
	if in == nil {
		return nil
	}
	out := new(SymmetricKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SymmetricKeyStatus) DeepCopyInto(out *SymmetricKeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SymmetricKeyStatus.
func (in *SymmetricKeyStatus) DeepCopy() *SymmetricKeyStatus {
	if in == nil {
		return nil
	}
	out := new(SymmetricKeyStatus)
	in.DeepCopyInto(out)
	return out
}
