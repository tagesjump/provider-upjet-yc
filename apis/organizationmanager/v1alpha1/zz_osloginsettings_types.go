// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type OsLoginSettingsInitParameters struct {

	// The organization to manage it's OsLogin Settings.
	OrganizationID *string `json:"organizationId,omitempty" tf:"organization_id,omitempty"`

	// The structure is documented below.
	SSHCertificateSettings []SSHCertificateSettingsInitParameters `json:"sshCertificateSettings,omitempty" tf:"ssh_certificate_settings,omitempty"`

	// The structure is documented below.
	UserSSHKeySettings []UserSSHKeySettingsInitParameters `json:"userSshKeySettings,omitempty" tf:"user_ssh_key_settings,omitempty"`
}

type OsLoginSettingsObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The organization to manage it's OsLogin Settings.
	OrganizationID *string `json:"organizationId,omitempty" tf:"organization_id,omitempty"`

	// The structure is documented below.
	SSHCertificateSettings []SSHCertificateSettingsObservation `json:"sshCertificateSettings,omitempty" tf:"ssh_certificate_settings,omitempty"`

	// The structure is documented below.
	UserSSHKeySettings []UserSSHKeySettingsObservation `json:"userSshKeySettings,omitempty" tf:"user_ssh_key_settings,omitempty"`
}

type OsLoginSettingsParameters struct {

	// The organization to manage it's OsLogin Settings.
	// +kubebuilder:validation:Optional
	OrganizationID *string `json:"organizationId,omitempty" tf:"organization_id,omitempty"`

	// The structure is documented below.
	// +kubebuilder:validation:Optional
	SSHCertificateSettings []SSHCertificateSettingsParameters `json:"sshCertificateSettings,omitempty" tf:"ssh_certificate_settings,omitempty"`

	// The structure is documented below.
	// +kubebuilder:validation:Optional
	UserSSHKeySettings []UserSSHKeySettingsParameters `json:"userSshKeySettings,omitempty" tf:"user_ssh_key_settings,omitempty"`
}

type SSHCertificateSettingsInitParameters struct {

	// Enables or disables usage of ssh certificates signed by trusted CA.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type SSHCertificateSettingsObservation struct {

	// Enables or disables usage of ssh certificates signed by trusted CA.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type SSHCertificateSettingsParameters struct {

	// Enables or disables usage of ssh certificates signed by trusted CA.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type UserSSHKeySettingsInitParameters struct {

	// If set to true subject is allowed to manage own ssh keys without having to be assigned specific permissions.
	AllowManageOwnKeys *bool `json:"allowManageOwnKeys,omitempty" tf:"allow_manage_own_keys,omitempty"`

	// Enables or disables usage of ssh keys assigned to a specific subject.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type UserSSHKeySettingsObservation struct {

	// If set to true subject is allowed to manage own ssh keys without having to be assigned specific permissions.
	AllowManageOwnKeys *bool `json:"allowManageOwnKeys,omitempty" tf:"allow_manage_own_keys,omitempty"`

	// Enables or disables usage of ssh keys assigned to a specific subject.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type UserSSHKeySettingsParameters struct {

	// If set to true subject is allowed to manage own ssh keys without having to be assigned specific permissions.
	// +kubebuilder:validation:Optional
	AllowManageOwnKeys *bool `json:"allowManageOwnKeys,omitempty" tf:"allow_manage_own_keys,omitempty"`

	// Enables or disables usage of ssh keys assigned to a specific subject.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

// OsLoginSettingsSpec defines the desired state of OsLoginSettings
type OsLoginSettingsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     OsLoginSettingsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider OsLoginSettingsInitParameters `json:"initProvider,omitempty"`
}

// OsLoginSettingsStatus defines the observed state of OsLoginSettings.
type OsLoginSettingsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OsLoginSettingsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// OsLoginSettings is the Schema for the OsLoginSettingss API. Allows management of OsLogin Settings within an existing Yandex.Cloud Organization.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,yandex-cloud}
type OsLoginSettings struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.organizationId) || (has(self.initProvider) && has(self.initProvider.organizationId))",message="spec.forProvider.organizationId is a required parameter"
	Spec   OsLoginSettingsSpec   `json:"spec"`
	Status OsLoginSettingsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OsLoginSettingsList contains a list of OsLoginSettingss
type OsLoginSettingsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []OsLoginSettings `json:"items"`
}

// Repository type metadata.
var (
	OsLoginSettings_Kind             = "OsLoginSettings"
	OsLoginSettings_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: OsLoginSettings_Kind}.String()
	OsLoginSettings_KindAPIVersion   = OsLoginSettings_Kind + "." + CRDGroupVersion.String()
	OsLoginSettings_GroupVersionKind = CRDGroupVersion.WithKind(OsLoginSettings_Kind)
)

func init() {
	SchemeBuilder.Register(&OsLoginSettings{}, &OsLoginSettingsList{})
}
