// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DNSOptionsInitParameters struct {

	// If enabled - additional service dns will be created.
	PrivateDNSRecordsEnabled *bool `json:"privateDnsRecordsEnabled,omitempty" tf:"private_dns_records_enabled,omitempty"`
}

type DNSOptionsObservation struct {

	// If enabled - additional service dns will be created.
	PrivateDNSRecordsEnabled *bool `json:"privateDnsRecordsEnabled,omitempty" tf:"private_dns_records_enabled,omitempty"`
}

type DNSOptionsParameters struct {

	// If enabled - additional service dns will be created.
	// +kubebuilder:validation:Optional
	PrivateDNSRecordsEnabled *bool `json:"privateDnsRecordsEnabled,omitempty" tf:"private_dns_records_enabled,omitempty"`
}

type EndpointAddressInitParameters struct {

	// Specifies IP address within subnet_id.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// ID of the address.
	AddressID *string `json:"addressId,omitempty" tf:"address_id,omitempty"`

	// Subnet of the IP address.
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/vpc/v1alpha1.Subnet
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`
}

type EndpointAddressObservation struct {

	// Specifies IP address within subnet_id.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// ID of the address.
	AddressID *string `json:"addressId,omitempty" tf:"address_id,omitempty"`

	// Subnet of the IP address.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`
}

type EndpointAddressParameters struct {

	// Specifies IP address within subnet_id.
	// +kubebuilder:validation:Optional
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// ID of the address.
	// +kubebuilder:validation:Optional
	AddressID *string `json:"addressId,omitempty" tf:"address_id,omitempty"`

	// Subnet of the IP address.
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/vpc/v1alpha1.Subnet
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`
}

type ObjectStorageInitParameters struct {
}

type ObjectStorageObservation struct {
}

type ObjectStorageParameters struct {
}

type PrivateEndpointInitParameters struct {

	// Private endpoint DNS options block.
	DNSOptions []DNSOptionsInitParameters `json:"dnsOptions,omitempty" tf:"dns_options,omitempty"`

	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Private endpoint address specification block.
	EndpointAddress []EndpointAddressInitParameters `json:"endpointAddress,omitempty" tf:"endpoint_address,omitempty"`

	// ID of the folder that the resource belongs to. If it is not provided, the default provider folder is used.
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/resourcemanager/v1alpha1.Folder
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// Labels to apply to this resource. A list of key/value pairs.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Name of the private endpoint. Provided by the client when the private endpoint is created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// ID of the network which private endpoint belongs to.
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/vpc/v1alpha1.Network
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Reference to a Network in vpc to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDRef *v1.Reference `json:"networkIdRef,omitempty" tf:"-"`

	// Selector for a Network in vpc to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDSelector *v1.Selector `json:"networkIdSelector,omitempty" tf:"-"`

	ObjectStorage []ObjectStorageInitParameters `json:"objectStorage,omitempty" tf:"object_storage,omitempty"`
}

type PrivateEndpointObservation struct {

	// Creation timestamp of the key.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Private endpoint DNS options block.
	DNSOptions []DNSOptionsObservation `json:"dnsOptions,omitempty" tf:"dns_options,omitempty"`

	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Private endpoint address specification block.
	EndpointAddress []EndpointAddressObservation `json:"endpointAddress,omitempty" tf:"endpoint_address,omitempty"`

	// ID of the folder that the resource belongs to. If it is not provided, the default provider folder is used.
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Labels to apply to this resource. A list of key/value pairs.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Name of the private endpoint. Provided by the client when the private endpoint is created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// ID of the network which private endpoint belongs to.
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	ObjectStorage []ObjectStorageParameters `json:"objectStorage,omitempty" tf:"object_storage,omitempty"`

	// Status of the private endpoint.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type PrivateEndpointParameters struct {

	// Private endpoint DNS options block.
	// +kubebuilder:validation:Optional
	DNSOptions []DNSOptionsParameters `json:"dnsOptions,omitempty" tf:"dns_options,omitempty"`

	// An optional description of this resource. Provide this property when you create the resource.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Private endpoint address specification block.
	// +kubebuilder:validation:Optional
	EndpointAddress []EndpointAddressParameters `json:"endpointAddress,omitempty" tf:"endpoint_address,omitempty"`

	// ID of the folder that the resource belongs to. If it is not provided, the default provider folder is used.
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/resourcemanager/v1alpha1.Folder
	// +kubebuilder:validation:Optional
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// Labels to apply to this resource. A list of key/value pairs.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Name of the private endpoint. Provided by the client when the private endpoint is created.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// ID of the network which private endpoint belongs to.
	// +crossplane:generate:reference:type=github.com/tagesjump/provider-upjet-yc/apis/vpc/v1alpha1.Network
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Reference to a Network in vpc to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDRef *v1.Reference `json:"networkIdRef,omitempty" tf:"-"`

	// Selector for a Network in vpc to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDSelector *v1.Selector `json:"networkIdSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	ObjectStorage []ObjectStorageParameters `json:"objectStorage,omitempty" tf:"object_storage,omitempty"`
}

// PrivateEndpointSpec defines the desired state of PrivateEndpoint
type PrivateEndpointSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PrivateEndpointParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PrivateEndpointInitParameters `json:"initProvider,omitempty"`
}

// PrivateEndpointStatus defines the observed state of PrivateEndpoint.
type PrivateEndpointStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PrivateEndpointObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PrivateEndpoint is the Schema for the PrivateEndpoints API. Manages a VPC Private Endpoint within Yandex.Cloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,yandex-cloud}
type PrivateEndpoint struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.objectStorage) || (has(self.initProvider) && has(self.initProvider.objectStorage))",message="spec.forProvider.objectStorage is a required parameter"
	Spec   PrivateEndpointSpec   `json:"spec"`
	Status PrivateEndpointStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PrivateEndpointList contains a list of PrivateEndpoints
type PrivateEndpointList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PrivateEndpoint `json:"items"`
}

// Repository type metadata.
var (
	PrivateEndpoint_Kind             = "PrivateEndpoint"
	PrivateEndpoint_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PrivateEndpoint_Kind}.String()
	PrivateEndpoint_KindAPIVersion   = PrivateEndpoint_Kind + "." + CRDGroupVersion.String()
	PrivateEndpoint_GroupVersionKind = CRDGroupVersion.WithKind(PrivateEndpoint_Kind)
)

func init() {
	SchemeBuilder.Register(&PrivateEndpoint{}, &PrivateEndpointList{})
}
